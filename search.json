[{"path":[]},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://m.canouil.dev/eggla/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://m.canouil.dev/eggla/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to eggla","title":"Contributing to eggla","text":"outlines propose change eggla. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://m.canouil.dev/eggla/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to eggla","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://m.canouil.dev/eggla/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to eggla","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://m.canouil.dev/eggla/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to eggla","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"mcanouil/eggla\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e., just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://m.canouil.dev/eggla/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to eggla","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://m.canouil.dev/eggla/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to eggla","text":"Please note project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://m.canouil.dev/eggla/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Mickaël Canouil, Nicole Warrington, Kimberley Burrows, Anni Heiskala Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://m.canouil.dev/eggla/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with eggla","title":"Getting help with eggla","text":"Thanks using eggla! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://m.canouil.dev/eggla/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with eggla","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://m.canouil.dev/eggla/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with eggla","text":"Armed reprex, next step figure ask: ’s question (sure ’s bug): open Q&discussion. ’s bug: ’re right place, file issue. opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g., :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://m.canouil.dev/eggla/articles/adiposity-peak-rebound.html","id":"r-setup","dir":"Articles","previous_headings":"","what":"R setup","title":"Adiposity Peak & Adiposity Rebound Caracterisation","text":"","code":"output_directory <- file.path(params[[\"working_directory\"]], \"models-diagnostics\") dir.create(output_directory, recursive = TRUE, showWarnings = FALSE, mode = \"0775\")  library(eggla) #> Default 'ggplot2' theme has been changed. #> Default 'ggplot2' colour and fill scales set to 'viridis'.  library(stats) library(utils)  library(data.table) library(ggplot2) library(ggtext) library(patchwork) theme_update(   plot.title = element_markdown(),   plot.subtitle = element_markdown(face = \"italic\"),   plot.caption = element_markdown(face = \"italic\"),   axis.title.x = element_markdown(),   axis.text.x = element_markdown(),   axis.title.y = element_markdown(),   axis.text.y = element_markdown(),   axis.line.x.top = element_blank(),   axis.ticks.x.top = element_blank() ) okabe_ito_palette <- c(   \"#E69F00FF\", \"#56B4E9FF\", \"#009E73FF\", \"#F0E442FF\", \"#0072B2FF\",   \"#D55E00FF\", \"#CC79A7FF\", \"#999999FF\" )"},{"path":"https://m.canouil.dev/eggla/articles/adiposity-peak-rebound.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Adiposity Peak & Adiposity Rebound Caracterisation","text":"","code":"res_0 <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   )  res_1 <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 1, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   )"},{"path":"https://m.canouil.dev/eggla/articles/adiposity-peak-rebound.html","id":"compute-adiposity-peak-ap-and-adiposity-rebound-ar","dir":"Articles","previous_headings":"Results","what":"Compute adiposity peak (AP) and adiposity rebound (AR)","title":"Adiposity Peak & Adiposity Rebound Caracterisation","text":"","code":"predicted_data <- list(   compute_apar(fit = res_0, from = \"predicted\"),   compute_apar(fit = res_1, from = \"predicted\") ) names(predicted_data) <- c(\"0\", \"1\")  predicted_data_all <- rbindlist(predicted_data, idcol = \"sex\")"},{"path":"https://m.canouil.dev/eggla/articles/adiposity-peak-rebound.html","id":"plot-apar-for-one-individual","dir":"Articles","previous_headings":"Results","what":"Plot AP/AR for one individual","title":"Adiposity Peak & Adiposity Rebound Caracterisation","text":"","code":"one_individual_data <- predicted_data_all[egg_id %in% egg_id[1]] one_individual_apar <- melt(   data = one_individual_data[AP | AR],   id.vars = c(\"egg_id\", \"egg_ageyears\"),   measure.vars = c(\"AP\", \"AR\") )[   (value) ][   j = labels := sprintf(     \"<b style=\\\"color:%s;\\\">%s = %s<\/b>\",     okabe_ito_palette[c(1, 2)][variable],     variable,     egg_ageyears   ) ]  ggplot(data = one_individual_data) +   geom_line(mapping = aes(x = egg_ageyears, y = egg_bmi)) +   geom_vline(     data = one_individual_apar,     mapping = aes(       xintercept = egg_ageyears,       colour = variable,       linetype = variable     ),     size = 1,     show.legend = FALSE   ) +   scale_x_continuous(     sec.axis = dup_axis(       name = NULL,       breaks = one_individual_apar[[\"egg_ageyears\"]],       labels = one_individual_apar[[\"labels\"]]     )   ) +   scale_colour_manual(values = okabe_ito_palette[c(1, 2)]) +   scale_linetype_manual(values = c(2, 4)) +   labs(     x = \"AGE (years)\",     y = \"BMI (kg/m\\u00B2)\",     colour = NULL,     linetype = NULL   ) +   theme(axis.text.x.top = element_markdown()) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://m.canouil.dev/eggla/articles/adiposity-peak-rebound.html","id":"plot-average-apar-for-all-individuals","dir":"Articles","previous_headings":"Results","what":"Plot average AP/AR for all individuals","title":"Adiposity Peak & Adiposity Rebound Caracterisation","text":"","code":"p_apar <- mapply(   data = predicted_data,   sex = names(predicted_data),   SIMPLIFY = FALSE,   FUN = function(data, sex) {     if (nrow(data) == 0) return(ggplot() + geom_blank())     predicted_dt_apar <- melt(       data = data[AP | AR],       id.vars = c(\"egg_id\", \"egg_ageyears\"),       measure.vars = c(\"AP\", \"AR\")     )[       (value)     ][       j = list(egg_ageyears = mean(egg_ageyears)),       by = \"variable\"     ][       j = labels := sprintf(         \"<b style=\\\"color:%s;\\\">%s &#8771; %0.2f<\/b>\",         okabe_ito_palette[c(1, 2)][variable],         variable,         egg_ageyears       )     ]     ggplot(data = data) +       aes(x = egg_ageyears, y = egg_bmi) +       geom_path(# Comment or remove this for big cohort         mapping = aes(group = factor(egg_id)),         colour = \"#333333\",         na.rm = TRUE,         alpha = 0.05,         show.legend = FALSE       ) +       stat_smooth(         method = \"gam\", # Comment for big cohort         formula = y ~ s(x, bs = \"cr\"), # Comment this for big cohort         linetype = 2,         colour = okabe_ito_palette[3],         se = FALSE       ) +       geom_vline(         data = predicted_dt_apar,         mapping = aes(           xintercept = egg_ageyears,           colour = variable,           linetype = variable         ),         size = 1,         show.legend = FALSE       ) +       scale_x_continuous(         sec.axis = dup_axis(           name = NULL,           breaks = predicted_dt_apar[[\"egg_ageyears\"]],           labels = predicted_dt_apar[[\"labels\"]]         )       ) +       scale_y_log10() +       scale_colour_manual(values = okabe_ito_palette[c(1, 2)]) +       scale_linetype_manual(values = c(2, 4)) +       labs(         x = \"AGE (years)\",         y = \"BMI (kg/m\\u00B2)\",         colour = NULL,         linetype = NULL       ) +       theme(axis.text.x.top = element_markdown())   } )  wrap_plots(p_apar, nrow = 2) +   plot_annotation(     title = \"Mean Adiposity Peak & Rebound\",     caption = \"Cubic Splines (Fixed Effects = Random Effects)\",     subtitle = \"With A) sex = 0, and with B) sex = 1\",     tag_levels = \"A\"   )"},{"path":[]},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"create-run_eggla-r-script","dir":"Articles","previous_headings":"Run Using Docker","what":"Create run_eggla.R script","title":"Get Started with 'eggla'","text":"Copy edit following code new file (e.g., /home/mcanouil/eggla/run_eggla.R) server run analysis appropriate parameters.","code":"library(eggla) library(data.table) working_directory <- tempdir() # To be modified by user res <- try(run_eggla_lmm(   data = fread(\"/home/mcanouil/eggla/bmigrowth.csv\"), # to be changed with the path of the file containing the data   id_variable = \"ID\",   age_days_variable = NULL, # computed based on \"age_years_variable\" if not provided. Only used for QC.   age_years_variable = \"age\",   weight_kilograms_variable = \"weight\",   height_centimetres_variable = \"height\",   sex_variable = \"sex\",   covariates = NULL,   male_coded_zero = FALSE,   random_complexity = \"auto\",   use_car1 = FALSE,   parallel = FALSE, # to parallelise Daymont QC   parallel_n_chunks = 1, # to parallelise Daymont QC   working_directory = working_directory ))"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"run-the-script-using-a-docker-container","dir":"Articles","previous_headings":"Run Using Docker","what":"Run the script using a Docker container","title":"Get Started with 'eggla'","text":"Donwload (latest) Docker image specific version GitHub Registry run following command: Note: left-hand side (LHS) /home/mcanouil/eggla:/tmp/eggla directory server, right-hand side LHS directory appear within Docker container.","code":"docker run \\   --name eggla-docker-analysis \\   --detach \\   --rm \\   --volume /home/mcanouil/eggla:/tmp/eggla \\   ghcr.io/mcanouil/eggla:latest Rscript /tmp/eggla/run_eggla.R"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"retrieve-the-outputs","dir":"Articles","previous_headings":"Run Using Docker","what":"Retrieve the outputs","title":"Get Started with 'eggla'","text":"","code":"/home/mcanouil/eggla/ ├── 2021-11-23-female.zip └── 2021-11-23-male.zip"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"create-run_eggla_gwas-r-script","dir":"Articles","previous_headings":"Run Using Docker","what":"Create run_eggla_gwas.R Script","title":"Get Started with 'eggla'","text":"Copy edit following code new file (e.g., /home/mcanouil/eggla/run_eggla_gwas.R) server run analysis appropriate parameters.","code":"working_directory <- \"/home/mcanouil/eggla\" setwd(working_directory) library(eggla) chr_in_parallel <- FALSE # or 11 to run 11 chromosomes in 11 processes/cores if (!isFALSE(chr_in_parallel)) {   future::plan(\"multicore\", workers = min(chr_in_parallel, future::availableCores())) } run_eggla_gwas(   data = \"./bmigrowth.csv\",   results_zip = list.files(path = \".\", pattern = \"\\\\.zip\", full.names = TRUE),   id_column = \"ID\",   traits = c(\"slope_.*\", \"auc_.*\", \"^AP_.*\", \"^AR_.*\"),   covariates = c(\"sex\"),   vcfs = list.files(path = file.path(\".\", \"vcf\"), pattern = \"\\\\.vcf$|\\\\.vcf.gz$\", full.names = TRUE),   vep_file = NULL,   working_directory = \".\",   bin_path = list(     bcftools = \"/usr/bin/bcftools\",     plink2 = \"/usr/bin/plink2\"   ),   threads = 1 )"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"run-the-script-using-a-docker-container-1","dir":"Articles","previous_headings":"Run Using Docker","what":"Run the script using a Docker container","title":"Get Started with 'eggla'","text":"Donwload (latest) Docker image specific version GitHub Registry run following command: Note: left-hand side (LHS) /home/mcanouil/eggla:/tmp/eggla directory server, right-hand side LHS directory appear within Docker container.","code":"docker run \\   --name eggla-docker-analysis \\   --detach \\   --rm \\   --volume /home/mcanouil/eggla:/tmp/eggla \\   ghcr.io/mcanouil/eggla:latest Rscript /tmp/eggla/run_eggla_gwas.R"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"retrieve-the-outputs-1","dir":"Articles","previous_headings":"Run Using Docker","what":"Retrieve the outputs","title":"Get Started with 'eggla'","text":"","code":"/home/mcanouil/eggla/ ├── gwas_software.txt └── gwas.csv.gz"},{"path":[]},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"create-run_eggla-sh-script","dir":"Articles","previous_headings":"Run Non-Interactively (In Bash/Shell)","what":"Create run_eggla.sh script","title":"Get Started with 'eggla'","text":"Copy edit following code new file (e.g., run_eggla.sh) server run analysis appropriate parameters.","code":"#!/bin/bash  home_analysis=\"/home/mcanouil/eggla\" # to be changed to the folder in which \"egg_analysis\" is to be performed  mkdir $home_analysis   cd $home_analysis || exit  Rscript <<EOF temp_library <- file.path(\".\", \"R\") dir.create(temp_library, recursive = TRUE) .libPaths(temp_library) utils::install.packages(   pkgs = \"pak\",   lib = temp_library,   repos = sprintf(     \"https://r-lib.github.io/p/pak/stable/%s/%s/%s\",     .Platform[[\"pkgType\"]], R.Version()[[\"os\"]], R.Version()[[\"arch\"]]   ) ) library(pak) utils::download.file(   url = \"https://raw.githubusercontent.com/mcanouil/eggla/latest/inst/setup/pkg.lock\",   destfile = \"pkg.lock\" ) lockfile_install(lockfile = \"pkg.lock\", lib = temp_library) pkg_install(\"mcanouil/eggla@latest\", lib = temp_library, upgrade = FALSE, dependencies = FALSE) EOF  Rscript <<EOF library(eggla) library(data.table) res <- try(run_eggla_lmm(   data = fread(\"bmigrowth.csv\"), # to be changed with the path of the file containing the data   id_variable = \"ID\",   age_days_variable = NULL, # computed based on \"age_years_variable\" if not provided. Only used for QC.   age_years_variable = \"age\",   weight_kilograms_variable = \"weight\",   height_centimetres_variable = \"height\",   sex_variable = \"sex\",   covariates = NULL,   male_coded_zero = FALSE,   random_complexity = \"auto\",   use_car1 = FALSE,   parallel = FALSE, # to parallelise Daymont QC   parallel_n_chunks = 1, # to parallelise Daymont QC   working_directory = \".\" )) if (inherits(res, \"try-error\")) unlink(wd, recursive = TRUE) EOF"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"run-the-analysis","dir":"Articles","previous_headings":"Run Non-Interactively (In Bash/Shell)","what":"Run the analysis","title":"Get Started with 'eggla'","text":"","code":"bash run_eggla.sh"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"retrieve-the-outputs-2","dir":"Articles","previous_headings":"Run Non-Interactively (In Bash/Shell)","what":"Retrieve the outputs","title":"Get Started with 'eggla'","text":"","code":"/home/mcanouil/eggla/ ├── 2021-11-23-female.zip └── 2021-11-23-male.zip"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"run-the-gwass","dir":"Articles","previous_headings":"Run Non-Interactively (In Bash/Shell)","what":"Run the GWASs","title":"Get Started with 'eggla'","text":"Run GWASs slopes AUCs male female.","code":"#!/bin/bash  home_analysis=\"/home/mcanouil/eggla\" # to be changed to the folder in which \"egg_analysis\" is to be performed  mkdir $home_analysis  cd $home_analysis || exit  Rscript <<EOF library(eggla) chr_in_parallel <- FALSE # or 11 to run 11 chromosomes in 11 processes/cores if (!isFALSE(chr_in_parallel)) {   if (nzchar(system.file(package = \"pak\"))) {     pak::pkg_install(c(\"future\", \"future.apply\"))   } else {     install.packages(c(\"future\", \"future.apply\"))   }   future::plan(\"multicore\", workers = min(chr_in_parallel, future::availableCores())) } run_eggla_gwas(   data = \"bmigrowth.csv\",   results_zip = list.files(path = \".\", pattern = \"\\\\\\\\.zip\", full.names = TRUE),   id_column = \"ID\",   traits = c(\"slope_.*\", \"auc_.*\", \"^AP_.*\", \"^AR_.*\"),   covariates = c(\"sex\"),   vcfs = list.files(path = file.path(\".\", \"vcf\"), pattern = \"\\\\\\\\.vcf$|\\\\\\\\.vcf.gz$\", full.names = TRUE),   vep_file = NULL,   working_directory = \".\",   bin_path = list(     bcftools = \"/usr/bin/bcftools\",     plink2 = \"https://s3.amazonaws.com/plink2-assets/plink2_linux_x86_64_20230109.zip\"     # check before using: https://www.cog-genomics.org/plink/2.0/   ),   threads = 1 ) EOF"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"retrieve-the-outputs-3","dir":"Articles","previous_headings":"Run Non-Interactively (In Bash/Shell)","what":"Retrieve the outputs","title":"Get Started with 'eggla'","text":"","code":"/home/mcanouil/eggla/ ├── gwas_software.txt └── gwas.csv.gz"},{"path":[]},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"create-the-working-directory","dir":"Articles","previous_headings":"Run Interactively In Bash/R","what":"Create the working directory","title":"Get Started with 'eggla'","text":"","code":"home_analysis=\"/home/mcanouil/eggla\" # to be changed to the folder in which \"egg_analysis\" is to be performed  mkdir $home_analysis   cd $home_analysis || exit"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"start-r-and-setup-environement","dir":"Articles","previous_headings":"Run Interactively In Bash/R","what":"Start R and setup environement","title":"Get Started with 'eggla'","text":"Start R setup working directory using pak restore predefined version packages.","code":"temp_library <- file.path(\".\", \"R\") dir.create(temp_library, recursive = TRUE) .libPaths(temp_library) utils::install.packages(   pkgs = \"pak\",   lib = temp_library,   repos = sprintf(     \"https://r-lib.github.io/p/pak/stable/%s/%s/%s\",     .Platform[[\"pkgType\"]], R.Version()[[\"os\"]], R.Version()[[\"arch\"]]   ) ) library(pak) utils::download.file(   url = \"https://raw.githubusercontent.com/mcanouil/eggla/latest/inst/setup/pkg.lock\",   destfile = \"pkg.lock\" ) lockfile_install(lockfile = \"pkg.lock\", lib = temp_library) pkg_install(\"mcanouil/eggla@0.10.4\", lib = temp_library, upgrade = FALSE, dependencies = FALSE)"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"run-the-analysis-1","dir":"Articles","previous_headings":"Run Interactively In Bash/R","what":"Run the analysis","title":"Get Started with 'eggla'","text":"Restart R running analysis.","code":"# setwd(\"/home/mcanouil/eggla\") # already set if step 1 was done library(eggla) library(data.table) res <- try(   run_eggla_lmm(     data = fread(\"bmigrowth.csv\"),     id_variable = \"ID\",     age_days_variable = NULL,     age_years_variable = \"age\",     weight_kilograms_variable = \"weight\",     height_centimetres_variable = \"height\",     sex_variable = \"sex\",     covariates = NULL,     male_coded_zero = FALSE,     random_complexity = \"auto\",     use_car1 = FALSE,     parallel = FALSE,     parallel_n_chunks = 1,     working_directory = \".\"   ) ) if (inherits(res, \"try-error\")) unlink(wd, recursive = TRUE)"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"retrieve-the-outputs-4","dir":"Articles","previous_headings":"Run Interactively In Bash/R","what":"Retrieve the outputs","title":"Get Started with 'eggla'","text":"","code":"/home/mcanouil/eggla/ ├── 2021-11-23-female.zip └── 2021-11-23-male.zip"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"run-the-gwass-1","dir":"Articles","previous_headings":"Run Interactively In Bash/R","what":"Run the GWASs","title":"Get Started with 'eggla'","text":"Run GWASs slopes AUCs male female.","code":"# setwd(\"/home/mcanouil/eggla\") # already set if step 1 was done library(eggla) chr_in_parallel <- FALSE # or 11 to run 11 chromosomes in 11 processes/cores if (!isFALSE(chr_in_parallel)) {   if (nzchar(system.file(package = \"pak\"))) {     pak::pkg_install(c(\"future\", \"future.apply\"))   } else {     install.packages(c(\"future\", \"future.apply\"))   }   future::plan(\"multicore\", workers = min(chr_in_parallel, future::availableCores())) } run_eggla_gwas(   data = \"bmigrowth.csv\",   results_zip = list.files(path = \".\", pattern = \"\\\\.zip\", full.names = TRUE),   id_column = \"ID\",   traits = c(\"slope_.*\", \"auc_.*\", \"^AP_.*\", \"^AR_.*\"),   covariates = c(\"sex\"),   vcfs = list.files(     path = file.path(\".\", \"vcf\"),     pattern = \"\\\\.vcf$|\\\\.vcf.gz$\",     full.names = TRUE   ),   vep_file = NULL,   working_directory = \".\",   bin_path = list(     bcftools = \"/usr/bin/bcftools\",     plink2 = \"https://s3.amazonaws.com/plink2-assets/plink2_linux_x86_64_20230109.zip\"     # check before using: https://www.cog-genomics.org/plink/2.0/   ),   threads = 1 )"},{"path":"https://m.canouil.dev/eggla/articles/eggla.html","id":"retrieve-the-outputs-5","dir":"Articles","previous_headings":"Run Interactively In Bash/R","what":"Retrieve the outputs","title":"Get Started with 'eggla'","text":"","code":"/home/mcanouil/eggla/ ├── gwas_software.txt └── gwas.csv.gz"},{"path":"https://m.canouil.dev/eggla/articles/model-selection.html","id":"r-setup","dir":"Articles","previous_headings":"","what":"R setup","title":"Model Selection","text":"","code":"library(eggla) library(data.table) library(scales) library(ggplot2) library(ggtext) library(patchwork)  library(forcats) library(ggbeeswarm)  okabe_ito_palette <- c(   \"#E69F00FF\", \"#56B4E9FF\", \"#009E73FF\", \"#F0E442FF\", \"#0072B2FF\",   \"#D55E00FF\", \"#CC79A7FF\", \"#999999FF\" )"},{"path":"https://m.canouil.dev/eggla/articles/model-selection.html","id":"select-the-best-model","dir":"Articles","previous_headings":"","what":"Select the “best” model","title":"Model Selection","text":"Note: following code assumes models-performance.csv vignette(\"models-diagnostics\") located params[[\"working_directory\"]].","code":"output_directory <- file.path(params[[\"working_directory\"]], \"models-diagnostics\")  files <- list.files(   path = output_directory,   pattern = \".*models-performance.csv$\",   full.names = TRUE,   recursive = TRUE )  perfs_dt <- rbindlist(lapply(   X = files,   FUN = function(x) fread(x)[j = cohort := sub(\"-.*\", \"\", basename(x))] ))[j = .SD[.N == length(files) * 2], by = c(\"dataset\", \"model\")]  metrics <- c(\"AIC\", \"BIC\", \"R2_conditional\", \"R2_marginal\", \"ICC\", \"RMSE\", \"Sigma\")  perfs_dt[   j = c(metrics) := lapply(.SD, function(x) scale(x)[, 1]),   by = \"cohort\",   .SDcols = metrics ] s_collapse <- function(x) {   x <- sort(unique(x))   paste(     paste(x[-length(x)], collapse = \", \"),     tail(x, 1),     sep = \" and \"   ) }  p <- ggplot(perfs_dt) +   aes(colour = sub(\" --.*\", \"\", model)) +   geom_boxplot(outlier.shape = NA) +   geom_beeswarm(shape = 1) +   stat_summary(geom = \"point\", fun = mean, shape = 18, colour = okabe_ito_palette[6], size = 4) +   scale_x_discrete(guide = guide_axis(n.dodge = 2)) +   theme(     plot.title = element_markdown(),     plot.subtitle = element_markdown(face = \"italic\"),     plot.caption = element_markdown(face = \"italic\"),     axis.title.x = element_markdown(),     axis.text.x = element_markdown(),     axis.title.y = element_markdown(),     axis.text.y = element_markdown(),     legend.position = \"none\"   )  wrap_plots(   p +     aes(       x = fct_reorder(sub(\" -- \", \"<br>\", model), AIC),       y = AIC     ) +     labs(x = NULL),   p +     aes(       x = fct_reorder(sub(\" -- \", \"<br>\", model), RMSE),       y = RMSE     ) +     labs(x = NULL),   p +     aes(       x = fct_reorder(sub(\" -- \", \"<br>\", model), -1 * R2_conditional),       y = R2_conditional     ) +     labs(x = NULL),   nrow = 3,   ncol = 1 ) +   plot_annotation(     title = \"Working Models for Male And Female\",     subtitle = sprintf(       \"Cohorts: %s<br>Datasets: %s\",       s_collapse(perfs_dt[[\"cohort\"]]),       s_collapse(perfs_dt[[\"dataset\"]])     ),     tag_levels = \"A\"   )"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"r-setup","dir":"Articles","previous_headings":"","what":"R setup","title":"Models Diagnostics","text":"","code":"output_directory <- file.path(tempdir(), \"models-diagnostics\") dir.create(output_directory, recursive = TRUE, showWarnings = FALSE, mode = \"0775\")  library(eggla) library(growthcleanr)  library(data.table) library(nlme) library(stats)  library(grDevices) library(ggplot2) library(ggtext) library(patchwork) library(scales)  library(gt) library(performance) library(see) library(qqplotr)  library(future) library(future.apply) library(future.callr) plan(\"callr\", workers = availableCores()) message(sprintf(\"Number of workers: %d\", nbrOfWorkers())) theme_update(   plot.title = element_markdown(),   plot.subtitle = element_markdown(face = \"italic\"),   plot.caption = element_markdown(face = \"italic\"),   axis.title.x = element_markdown(),   axis.text.x = element_markdown(),   axis.title.y = element_markdown(),   axis.text.y = element_markdown() ) okabe_ito_palette <- c(   \"#E69F00FF\", \"#56B4E9FF\", \"#009E73FF\", \"#F0E442FF\", \"#0072B2FF\",   \"#D55E00FF\", \"#CC79A7FF\", \"#999999FF\" )"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Models Diagnostics","text":"","code":"# pheno_dt <- setDT(get(data(\"bmigrowth\", package = \"eggla\"))) pheno_dt <- fread(\"pheno_file\")"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"tidy-data-for-daymonts-quality-control","dir":"Articles","previous_headings":"Data","what":"Tidy data for Daymont’s quality control","title":"Models Diagnostics","text":"age - age years (double). agedays - age days (integer). WEIGHTKG - weight kilograms (double). HEIGHTCM - height centimetres (double).","code":"is_male_zero <- FALSE pheno_dt[   j = `:=`(     \"agedays\" = floor(age * 365.25), # convert to age in days and as integers ...     \"WEIGHTKG\" = as.numeric(weight),     \"HEIGHTCM\" = as.numeric(height),     \"sex_daymont\" = {       if (is_male_zero) {         as.character(sex)       } else {         c(\"0\" = \"1\", \"1\" = \"0\")[as.character(sex)]       }     }   ) ]"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"add-daymonts-quality-control-tags","dir":"Articles","previous_headings":"Data","what":"Add Daymont’s quality control tags","title":"Models Diagnostics","text":"","code":"visits_long <- melt(   data = pheno_dt,   id.vars = c(\"ID\", \"age\", \"sex\", \"agedays\", \"sex_daymont\"),   measure.vars = c(\"WEIGHTKG\", \"HEIGHTCM\"),   variable.name = \"param\",   value.name = \"measurement\" )[   j = clean := cleangrowth(     subjid = ID,     param = param,     agedays = agedays,     sex = sex_daymont,     measurement = measurement,     quietly = FALSE   ) ]"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"computeupdate-bmi","dir":"Articles","previous_headings":"Data","what":"Compute/Update BMI","title":"Models Diagnostics","text":"BMI based raw measures BMI based Clean measures","code":"visits_raw <- dcast(   data = visits_long,   formula = ... ~ param,   value.var = \"measurement\" )[   j = \"bmi\" := WEIGHTKG / (HEIGHTCM / 100)^2 # recompute bmi based on QC variables ][   !is.na(bmi) # exclude missing BMI related to measurements exclusion ] visits_clean <- dcast(   data = visits_long[clean %in% \"Include\"], # Exclude all flags   formula = ... ~ param,   value.var = \"measurement\" )[   j = \"bmi\" := WEIGHTKG / (HEIGHTCM / 100)^2 # recompute bmi based on QC variables ][   !is.na(bmi) # exclude missing BMI related to measurements exclusion ]"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"model-diagnostics","dir":"Articles","previous_headings":"","what":"Model diagnostics","title":"Models Diagnostics","text":"Daymont’s code sex, Female: 1 Male: 0.","code":""},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"setup-all-models-to-be-tested","dir":"Articles","previous_headings":"Model diagnostics","what":"Setup all models to be tested","title":"Models Diagnostics","text":"","code":"random_effect <- c(   \"~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID\",   \"~ 1 | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)) | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3))[, 1:3] | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(2, 4), smooth = rep(2, 3)) | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID\",   \"~ 1 | ID\",   \"~ poly(age, degree = 3) | ID\",   \"~ poly(age, degree = 2) | ID\",   \"~ age | ID\",   \"~ 1 | ID\" )  fixed_effect <- c(   rep(\"log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2))\", 2),   rep(\"log(bmi) ~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3))\", 5),   rep(\"log(bmi) ~ poly(age, degree = 3)\", 4) ) all_models <- setDT(   expand.grid(     sex = c(0, 1),     dataset = c(       \"visits_raw\",       \"visits_clean\",       \"visits_clean[between(age, 1, 18)]\"     ),     correlation_structure = c(\"NULL\", \"corCAR1(form = ~ 1 | ID)\"),     models = sprintf(\"fixed = %s, random = %s\", fixed_effect, random_effect),     default = paste0(       c(         \"na.action = na.omit\",         \"method = \\\"ML\\\"\",         \"control = lmeControl(opt = \\\"optim\\\", maxIter = 500, msMaxIter = 500)\"       ),       collapse = \", \"     ),     lme = list(NULL),     results = list(\"Good\"),     perf_check_model = list(NULL),     perf_model_performance = list(NULL),     stringsAsFactors = FALSE   ) )"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"run-all-models","dir":"Articles","previous_headings":"Model diagnostics","what":"Run all models","title":"Models Diagnostics","text":"parallel using future.","code":"all_models[[\"lme\"]] <- future_mapply(   FUN = function(models, dataset, sex, correlation_structure, default) {     m <- sprintf(       \"list(lme(%s, data = %s[sex_daymont == %s], correlation = %s, %s))\",       models,       dataset,       sex,       correlation_structure,       default     )     tryCatch(       expr = eval(parse(text = m)),       error = function(e) sprintf(\"Error: %s\", e$message),       warning = function(w) sprintf(\"Warning: %s\", w$message)     )   },   models = all_models[[\"models\"]],   dataset = all_models[[\"dataset\"]],   sex = all_models[[\"sex\"]],   correlation_structure = all_models[[\"correlation_structure\"]],   default = all_models[[\"default\"]],   future.globals = c(\"visits_raw\", \"visits_clean\"),   future.packages = c(\"eggla\", \"nlme\", \"data.table\"),   USE.NAMES = FALSE )  all_models[[\"is_good\"]] <- future_mapply(   FUN = function(lme) inherits(summary(lme), \"lme\"),   lme = all_models[[\"lme\"]],   future.globals = FALSE,   future.packages = c(\"nlme\"),   USE.NAMES = FALSE )  all_models[   i = !(is_good),   j = results := list(lme) ]  all_models[   i = (is_good),   j = `:=`(     perf_check_model = lapply(       X = lme,       FUN = function(x) {         devnull <- capture.output(           out <- check_model(             x = x,             panel = FALSE,             check = c(\"normality\", \"linearity\", \"qq\"),             verbose = FALSE           )         )         out       }     ),     perf_model_performance = lapply(       X = lme,       FUN = function(x) {         performance::model_performance(           model = x,           metrics = \"all\",           estimator = \"ML\"         )[c(\"AIC\", \"BIC\", \"R2_conditional\", \"R2_marginal\", \"ICC\", \"RMSE\", \"Sigma\")]       }     )   ) ]  saveRDS(   object = all_models,   file = file.path(output_directory, \"summary_models.rds\"),   compress = FALSE )"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"models-results","dir":"Articles","previous_headings":"Model diagnostics","what":"Models results","title":"Models Diagnostics","text":"","code":"best_models <- paste(   \"fixed = log(bmi) ~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)),\",   \"random = ~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)) | ID\" ) best_dataset <- \"visits_clean\" good_res_models <- readRDS(file.path(output_directory, \"summary_models.rds\"))[   correlation_structure != \"NULL\" &     models %in% best_models &     dataset %in% best_dataset ] wrap_plots(   lapply(     X = good_res_models[j = perf_check_model],     FUN = function(.x) {       if (is.null(.x)) {         wrap_plots(rep(list(ggplot() + geom_blank()), 3), nrow = 1, tag_level = \"new\")       } else {         wrap_plots(print(.x + theme_get()), nrow = 1, tag_level = \"new\")       }     }   ),   nrow = 2 ) +   plot_annotation(     title = \"Cubic Splines (Fixed Effects = Random Effects)\",     subtitle = \"With A) sex = 0, and with B) sex = 1\",     tag_levels = c(\"A\", \"1\")   ) ggplot(   data = good_res_models[     j = rbindlist(lapply(       X = lme,       FUN = function(.lme) {         if (inherits(.lme, \"lme\")) {           .lme[[\"data\"]][j = .SD, .SDcols = !\"sex\"]         }       }     )),     by = list(sex, dataset, models)   ] ) +   aes(     x = age,     y = bmi,     linetype = c(\"0\" = \"Male\", \"1\" = \"Female\")[as.character(sex)]   ) +   geom_path( # comment/remove to not draw individual trajectories     mapping = aes(group = ID),     alpha = 0.10,     show.legend = FALSE   ) +   stat_smooth(     mapping = aes(colour = \"On observed values\"),     se = FALSE,     method = \"gam\",     formula = y ~ s(x, bs = \"cr\")   ) +   stat_smooth(     data = setnames(       x = good_res_models[         j = rbindlist(lapply(           X = lme,           FUN = function(.lme) {             if (inherits(.lme, \"lme\")) {               predict_bmi(                 fit = .lme,                 start = min(.lme[[\"data\"]][[\"age\"]]),                 end = max(.lme[[\"data\"]][[\"age\"]])               )             }           }         )),         by = list(sex, dataset, models)       ],       old = c(\"egg_ageyears\", \"egg_bmi\"),       new = c(\"age\", \"bmi\")     ),     mapping = aes(colour = \"On predicted values\"),     se = FALSE,     method = \"gam\",     formula = y ~ s(x, bs = \"cr\")   ) +   scale_x_sqrt(     expand = c(0, 0),     breaks = c(0, 0.5, 1, 1.5, 2, 5, 10, 15),     limits = c(0, NA)   ) +   scale_colour_manual(values = c(okabe_ito_palette[1], okabe_ito_palette[3])) +   labs(     title = \"Cubic Splines (Fixed Effects = Random Effects)\",     x = \"AGE (years)\",     y = \"BMI (kg/m\\u00B2)\",     colour = \"GAM: y ~ s(x, bs = \\\"cr\\\")\",     linetype = \"Sex\"   ) +   theme(     legend.position = c(0.01, 0.99),     legend.justification = c(\"left\", \"top\")   ) fmt_models <- all_models[   j = list(     sex = c(\"0\" = \"Male\", \"1\" = \"Female\")[as.character(sex)],     dataset = c(       \"visits_raw\" = \"Raw\",       \"visits_clean\" = \"Clean\",       \"visits_clean[between(age, 1, 18)]\" = \"Clean<br><i style='font-size: 6pt'>(1 ≤ age ≤ 18)<\/i>\"     )[dataset],     correlation_structure,     model = setNames(       object = c(         sprintf(\"<b style='color: %s'>Linear Splines<\/b> - Random Linear Splines\", okabe_ito_palette[4]),         sprintf(\"<b style='color: %s'>Linear Splines<\/b> - Random Intercepts\", okabe_ito_palette[4]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Cubic Splines\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Cubic Splines (1:3)\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Quadratic Splines\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Linear Splines\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Intercepts\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Cubic Slopes\", okabe_ito_palette[6]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Quadratic Slopes\", okabe_ito_palette[6]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Linear Slopes\", okabe_ito_palette[6]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Intercepts\", okabe_ito_palette[6])       ),       nm = sprintf(\"fixed = %s, random = %s\", fixed_effect, random_effect)     )[models],     results = sub(\", block [0-9]+$| = [0-9.e-]+$\", \"\", results),     perf = perf_model_performance   ) ][   j = c(\"model\", \"random\") := tstrsplit(model, \" - \") ][   j = `:=`(     y = paste0(       model,       fifelse(correlation_structure == \"NULL\", \"<br>\", \" -- C-AR1<br>\"),       \"<i style='font-size: 8pt'>\", random, \"<\/i>\"     )   ) ][   j = `:=`(     x = factor(x = dataset, levels = unique(dataset)),     y = factor(x = y, levels = rev(unique(y))),     fill = factor(       x = sub(\":.*\", \"\", results),       levels = c(\"Good\", \"Warning\", \"Error\")     )   ) ]  fwrite(   x = fmt_models[     j = unlist(perf, recursive = FALSE),     by = list(       sex,       dataset = gsub(\"<b [^>]*>|<\/b>|<i [^>]*>|<\/i>\", \"\", x),       model = gsub(\"<br>\", \" -- \", gsub(\"<b [^>]*>|<\/b>|<i [^>]*>|<\/i>\", \"\", y)),       status = sub(\"TRUE\", \"Good\", results)     )   ],   file = file.path(output_directory, \"models-performance.csv\") )"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"models-status","dir":"Articles","previous_headings":"Model diagnostics","what":"Models status","title":"Models Diagnostics","text":"","code":"ggplot(data = fmt_models) +   aes(x = x, y = y, fill = fill) +   facet_grid(cols = vars(sex)) +   geom_tile(colour = \"white\") +   scale_x_discrete(expand = c(0, 0)) +   scale_y_discrete(expand = c(0, 0)) +   scale_fill_manual(     values = c(       \"Good\" = okabe_ito_palette[2],       \"Warning\" = okabe_ito_palette[3],       \"Error\" = okabe_ito_palette[1]     )   ) +   labs(x = NULL, y = NULL, fill = NULL) +   theme(legend.position = \"top\") if (fmt_models[fill != \"Good\", .N > 0]) {   diag_tab <- gt(     data = fmt_models[       i = fill != \"Good\",       j = list(         Model = gsub(\"<i [^>]*>|<\/i>\", \"\", gsub(\"<br>\", \" -- \", gsub(\"8pt\", \"0.75em\", as.character(y)))),         Dataset = gsub(\"<br>\", \" \", gsub(\"|<i [^>]*>|<\/i>\", \"\", gsub(\"6pt\", \"0.75em\", as.character(x)))),         Result = results       )     ]   ) %>%     fmt(columns = everything(), fns = identity) %>%     tab_header(title = \"Models Diagnostics\") %>%     data_color(       columns = \"Result\",       colors = function(x) {         c(           \"Good\" = okabe_ito_palette[2],           \"Warning\" = okabe_ito_palette[3],           \"Error\" = okabe_ito_palette[1]         )[sub(\"TRUE\", \"Good\", sub(\":.*\", \"\", x))]       },       apply_to = \"text\"     ) %>%     tab_options(       table.font.size = \"10pt\",       data_row.padding = \"2pt\"     ) %>%     opt_all_caps() %>%     opt_row_striping()    gtsave(diag_tab, file.path(output_directory, \"models-diagnostics.html\")) }"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"models-performance","dir":"Articles","previous_headings":"Model diagnostics","what":"Models performance","title":"Models Diagnostics","text":"","code":"perf_tab <- gt(   data = fmt_models[     i = fill %in% \"Good\",     j = list(       Sex = sex,       Model = gsub(\"<i [^>]*>|<\/i>\", \"\", gsub(\"<br>\", \" -- \", gsub(\"8pt\", \"0.75em\", as.character(y)))),       Dataset = gsub(\"<br>\", \" \", gsub(\"|<i [^>]*>|<\/i>\", \"\", gsub(\"6pt\", \"0.75em\", as.character(x)))),       rbindlist(perf, fill = TRUE)     )   ],   groupname_col = c(\"Sex\", \"Dataset\") ) %>%   fmt(columns = c(\"Model\", \"Sex\", \"Dataset\"), fns = identity) %>%   fmt_number(     columns = c(\"AIC\", \"BIC\"),     decimals = 1,     drop_trailing_zeros = FALSE   ) %>%   fmt_number(     columns = c(\"R2_conditional\", \"R2_marginal\"),     n_sigfig = 3,     drop_trailing_zeros = FALSE   ) %>%   fmt_number(     columns = c(\"RMSE\", \"Sigma\"),     n_sigfig = 3,     drop_trailing_zeros = FALSE   ) %>%   fmt_number(     columns = \"ICC\",     rows = ICC >= 0.10,     decimals = 3,     n_sigfig = 3,     drop_trailing_zeros = FALSE   ) %>%   fmt_scientific(     columns = \"ICC\",     rows = ICC < 0.10,     decimals = 2,     drop_trailing_zeros = FALSE   ) %>%   tab_header(title = \"Models Performance\") %>%   data_color(     columns = c(\"AIC\", \"BIC\", \"R2_conditional\", \"R2_marginal\", \"ICC\", \"RMSE\", \"Sigma\"),     colors = function(x) {       sx <- rescale(x, to = c(0, 1))       col_numeric(palette = \"plasma\", domain = c(0, 1))(sx)     }   ) %>%   tab_options(     table.font.size = \"10pt\",     data_row.padding = \"2pt\"   ) %>%   opt_all_caps() %>%   opt_row_striping()  gtsave(perf_tab, file.path(output_directory, \"models-performance.html\"))"},{"path":[]},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"load-update-and-write-new-performance-metrics","dir":"Articles","previous_headings":"Update performance metrics","what":"Load, update, and write new performance metrics","title":"Models Diagnostics","text":"","code":"models_file_rds <- file.path(output_directory, \"summary_models.rds\") all_models <- readRDS() all_models[   i = (is_good),   j = `:=`(     perf_check_model = lapply(       X = lme,       FUN = function(x) {         devnull <- capture.output(           out <- check_model(             x = x,             panel = FALSE,             check = c(\"normality\", \"linearity\", \"qq\"),             verbose = FALSE           )         )         out       }     ),     perf_model_performance = lapply(lme, model_performance)   ) ] saveRDS(object = all_models, file = models_file_rds, compress = FALSE)"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"export-performance-as-csv","dir":"Articles","previous_headings":"Update performance metrics","what":"Export performance as CSV","title":"Models Diagnostics","text":"","code":"random_effect <- c(   \"~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID\",   \"~ 1 | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)) | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3))[, 1:3] | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(2, 4), smooth = rep(2, 3)) | ID\",   \"~ gsp(age, knots = c(2, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID\",   \"~ 1 | ID\",   \"~ poly(age, degree = 3) | ID\",   \"~ poly(age, degree = 2) | ID\",   \"~ age | ID\",   \"~ 1 | ID\" )  fixed_effect <- c(   rep(\"log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2))\", 2),   rep(\"log(bmi) ~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3))\", 5),   rep(\"log(bmi) ~ poly(age, degree = 3)\", 4) ) fmt_models <- all_models[   j = list(     sex = c(\"0\" = \"Male\", \"1\" = \"Female\")[as.character(sex)],     dataset = c(       \"visits_raw\" = \"Raw\",       \"visits_clean\" = \"Clean\",       \"visits_clean[between(age, 1, 18)]\" = \"Clean<br><i style='font-size: 6pt'>(1 ≤ age ≤ 18)<\/i>\"     )[dataset],     correlation_structure,     model = setNames(       object = c(         sprintf(\"<b style='color: %s'>Linear Splines<\/b> - Random Linear Splines\", okabe_ito_palette[4]),         sprintf(\"<b style='color: %s'>Linear Splines<\/b> - Random Intercepts\", okabe_ito_palette[4]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Cubic Splines\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Cubic Splines (1:3)\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Quadratic Splines\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Linear Splines\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Splines<\/b> - Random Intercepts\", okabe_ito_palette[5]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Cubic Slopes\", okabe_ito_palette[6]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Quadratic Slopes\", okabe_ito_palette[6]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Linear Slopes\", okabe_ito_palette[6]),         sprintf(\"<b style='color: %s'>Cubic Slope<\/b> - Random Intercepts\", okabe_ito_palette[6])       ),       nm = sprintf(\"fixed = %s, random = %s\", fixed_effect, random_effect)     )[models],     results = sub(\", block [0-9]+$| = [0-9.e-]+$\", \"\", results),     perf = perf_model_performance   ) ][   j = c(\"model\", \"random\") := tstrsplit(model, \" - \") ][   j = `:=`(     y = paste0(       model,       fifelse(correlation_structure == \"NULL\", \"<br>\", \" -- C-AR1<br>\"),       \"<i style='font-size: 8pt'>\", random, \"<\/i>\"     )   ) ][   j = `:=`(     x = factor(x = dataset, levels = unique(dataset)),     y = factor(x = y, levels = rev(unique(y))),     fill = factor(       x = sub(\":.*\", \"\", results),       levels = c(\"Good\", \"Warning\", \"Error\")     )   ) ]  fwrite(   x = fmt_models[     j = unlist(perf, recursive = FALSE),     by = list(       sex,       dataset = gsub(\"<b [^>]*>|<\/b>|<i [^>]*>|<\/i>\", \"\", x),       model = gsub(\"<br>\", \" -- \", gsub(\"<b [^>]*>|<\/b>|<i [^>]*>|<\/i>\", \"\", y)),       status = sub(\"TRUE\", \"Good\", results)     )   ],   file = file.path(output_directory, \"models-performance.csv\") )"},{"path":"https://m.canouil.dev/eggla/articles/models-diagnostics.html","id":"tidy-performance-data-subset","dir":"Articles","previous_headings":"Update performance metrics","what":"Tidy performance data (subset)","title":"Models Diagnostics","text":"","code":"performance_file_csv <- file.path(output_directory, \"models-performance.csv\") fwrite(   file = file.path(output_directory, \"models-performance-tidy.csv\"),   scipen = 10,   x = dcast(     data = melt(       data = fread(performance_file_csv)[         dataset %in% \"Clean\" & !grepl(\"Intercepts\", model)       ][         j = .SD,         .SDcols = -c(\"dataset\", \"status\")       ][         j = model := factor(           x = model,           levels = c(             \"Cubic Slope -- Random Cubic Slopes\",             \"Cubic Slope -- Random Quadratic Slopes\",             \"Cubic Slope -- Random Linear Slopes\",             \"Cubic Slope -- C-AR1 -- Random Cubic Slopes\",             \"Cubic Slope -- C-AR1 -- Random Quadratic Slopes\",             \"Cubic Slope -- C-AR1 -- Random Linear Slopes\",             \"Linear Splines -- Random Linear Splines\",             \"Linear Splines -- C-AR1 -- Random Linear Splines\",             \"Cubic Splines -- Random Cubic Splines\",             \"Cubic Splines -- Random Cubic Splines (1:3)\",             \"Cubic Splines -- Random Quadratic Splines\",             \"Cubic Splines -- Random Linear Splines\",             \"Cubic Splines -- C-AR1 -- Random Cubic Splines\",             \"Cubic Splines -- C-AR1 -- Random Cubic Splines (1:3)\",             \"Cubic Splines -- C-AR1 -- Random Quadratic Splines\",             \"Cubic Splines -- C-AR1 -- Random Linear Splines\"           )         )       ][         order(model)       ],       id.vars = c(\"model\", \"sex\"),       variable.name = \"perf_metrics_name\",       value.name = \"perf_metrics_value\"     )[       j = perf_metrics_name := factor(         x = perf_metrics_name,         levels = c(           \"AIC\", \"BIC\", \"R2_conditional\", \"R2_marginal\",           \"ICC\", \"RMSE\", \"Sigma\"         )       )     ][       order(perf_metrics_name)     ],     formula = model + perf_metrics_name ~ sex,     value.var = \"perf_metrics_value\"   ) )"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"library(eggla) #> Default 'ggplot2' theme has been changed. #> Default 'ggplot2' colour and fill scales set to 'viridis'. library(growthcleanr) library(broom.mixed) library(data.table, quietly = TRUE)  # Setup for plots library(ggplot2, quietly = TRUE) library(patchwork)  okabe_ito_palette <- c(   \"#E69F00FF\", \"#56B4E9FF\", \"#009E73FF\", \"#F0E442FF\", \"#0072B2FF\",   \"#D55E00FF\", \"#CC79A7FF\", \"#999999FF\" )"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"eggla includes small dataset 1050 rows 6 variables. ID (character): ID using three digits. age (numeric): age years. sex (integer): sex 1: male 0: female. weight (numeric): weight kilograms. height (integer): height centimetres. bmi (numeric): Body Mass Index kilograms per quare metre.","code":"data(\"bmigrowth\") bmigrowth <- as.data.table(bmigrowth) bmigrowth[bmigrowth[[\"ID\"]] == \"001\"] #>     ID   age sex    weight height      bmi #> 1: 001  0.00   0  3.318845     47 15.02420 #> 2: 001  0.25   0  6.585227     60 18.29230 #> 3: 001  0.50   0  7.239751     64 17.67517 #> 4: 001  0.75   0  9.474914     66 21.75141 #> 5: 001  2.00   0 13.990333     79 22.41681 #> 6: 001  4.00   0 25.909311    105 23.50051 #> 7: 001  6.00   0 30.117745    106 26.80469 #> 8: 001 12.00   0 77.958539    148 35.59101 #> 9: 001 14.00   0 92.021767    156 37.81302 ggplot(data = bmigrowth) +   aes(x = age, y = bmi, colour = factor(ID)) +   geom_path(na.rm = TRUE, alpha = 0.25) +   geom_point(size = 0.5, na.rm = TRUE, alpha = 0.25) +   stat_smooth(     method = \"gam\",     formula = y ~ s(x, bs = \"cr\"),     linetype = 1,     colour = okabe_ito_palette[6],     se = FALSE   ) +   theme(legend.position = \"none\") +   labs(x = \"AGE (years)\", y = \"BMI (kg/m\\u00B2)\") +   facet_grid(     cols = vars(sex),     margins = TRUE,     labeller = labeller(       .cols = function(x) {         c(\"0\" = \"FEMALE\", \"1\" = \"MALE\", \"2\" = \"FEMALE\", \"(all)\" = \"ALL\")[x]       }     )   )"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"with-daymonts-qc","dir":"Articles","previous_headings":"Data","what":"With Daymont’s QC","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"pheno_dt <- bmigrowth[   j = `:=`(     \"agedays\" = floor(age * 365.25), # convert to age in days and as integers ...     \"WEIGHTKG\" = as.numeric(weight),     \"HEIGHTCM\" = as.numeric(height)   ) ][   j = `:=`(# recode sex with Male = 0 and Female = 1...     \"sex_daymont\" = c(\"0\" = \"1\", \"1\" = \"0\")[as.character(sex)]   ) ]  pheno_dt_long <- melt(   data = pheno_dt,   id.vars = c(\"ID\", \"age\", \"sex\", \"agedays\", \"sex_daymont\"),   measure.vars = c(\"WEIGHTKG\", \"HEIGHTCM\"),   variable.name = \"param\",   value.name = \"measurement\" )[   j = clean := cleangrowth(# Daymont's QC from 'growthcleanr'     subjid = ID,     param = param,     agedays = agedays,     sex = sex_daymont,     measurement = measurement,     quietly = TRUE   ) ] pheno_dt_clean <- dcast(   data = pheno_dt_long[clean %in% \"Include\"], # Exclude all flags   formula = ... ~ param,   value.var = \"measurement\" )[   j = \"bmi\" := WEIGHTKG / (HEIGHTCM / 100)^2 # recompute bmi based using QCed variables ][   !is.na(bmi) # exclude missing BMI related to measurements exclusion ]"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"without-daymonts-qc","dir":"Articles","previous_headings":"Data","what":"Without Daymont’s QC","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"pheno_dt_clean <- bmigrowth"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"modelling-female","dir":"Articles","previous_headings":"","what":"Modelling Female","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"pheno_dt_female <- pheno_dt_clean[sex_daymont == 1] res <- egg_model(   formula = log(bmi) ~ age, # + covariates, e.g., `log(bmi) ~ age + covariates`   data = pheno_dt_female,   id_var = \"ID\",   random_complexity = 2, # \"auto\", 3, 2 or 1.   use_car1 = TRUE # default is FALSE ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3))[,1:3] | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     correlation = nlme::corCAR1(form = ~ 1 | ID), #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) class(res) #> [1] \"lme\" sres <- tidy(res) sres[[\"term\"]] <- sub(\"gsp\\\\(.*\\\\)\\\\)\", \"gsp(...)\", sres[[\"term\"]]) # simplify output sres #> # A tibble: 18 × 8 #>    effect   group    term          estimate std.error    df statistic    p.value #>    <chr>    <chr>    <chr>            <dbl>     <dbl> <dbl>     <dbl>      <dbl> #>  1 fixed    NA       (Intercept)   2.66e+ 0   0.0323    409     82.1   2.97e-256 #>  2 fixed    NA       gsp(...)D1(…  7.37e- 1   0.113     409      6.53  1.96e- 10 #>  3 fixed    NA       gsp(...)D2(… -1.58e+ 0   0.239     409     -6.60  1.27e- 10 #>  4 fixed    NA       gsp(...)D3(…  1.62e+ 0   0.242     409      6.68  7.70e- 11 #>  5 fixed    NA       gsp(...)C(1… -1.63e+ 0   0.243     409     -6.70  7.13e- 11 #>  6 fixed    NA       gsp(...)C(8…  1.24e- 2   0.00399   409      3.12  1.97e-  3 #>  7 fixed    NA       gsp(...)C(1… -1.74e- 2   0.00990   409     -1.76  7.91e-  2 #>  8 ran_pars ID       sd_(Interce…  7.66e- 2  NA          NA     NA    NA         #>  9 ran_pars ID       cor_gsp(...… -4.82e- 1  NA          NA     NA    NA         #> 10 ran_pars ID       cor_gsp(...…  3.17e- 1  NA          NA     NA    NA         #> 11 ran_pars ID       cor_gsp(...…  3.08e- 8  NA          NA     NA    NA         #> 12 ran_pars ID       sd_gsp(...)…  2.66e- 2  NA          NA     NA    NA         #> 13 ran_pars ID       cor_gsp(...… -9.06e- 1  NA          NA     NA    NA         #> 14 ran_pars ID       cor_gsp(...… -3.86e- 8  NA          NA     NA    NA         #> 15 ran_pars ID       sd_gsp(...)…  2.76e- 3  NA          NA     NA    NA         #> 16 ran_pars ID       cor_gsp(...…  2.08e- 9  NA          NA     NA    NA         #> 17 ran_pars ID       sd_gsp(...)…  2.93e-11  NA          NA     NA    NA         #> 18 ran_pars Residual sd_Observat…  8.24e- 2  NA          NA     NA    NA"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"predicted-values","dir":"Articles","previous_headings":"","what":"Predicted Values","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"ggplot() +   aes(x = age, y = bmi) +   geom_path(     data = pheno_dt_female,     mapping = aes(group = ID),     alpha = 0.10,     show.legend = FALSE   ) +   stat_smooth(     data = pheno_dt_female,     mapping = aes(colour = \"On observed values\"),     se = FALSE,     method = \"gam\",     formula = y ~ s(x, bs = \"cr\")   ) +   stat_smooth(     data = setnames(       x = predict_bmi(res, start = min(pheno_dt_female[[\"age\"]]), end = max(pheno_dt_female[[\"age\"]])),       old = c(\"egg_ageyears\", \"egg_bmi\"),       new = c(\"age\", \"bmi\")     ),     mapping = aes(colour = \"On predicted values\"),     se = FALSE,     method = \"gam\",     formula = y ~ s(x, bs = \"cr\")   ) +   scale_x_sqrt(     expand = c(0, 0),     breaks = c(0, 0.5, 1, 1.5, 2, 5, 10, 15),     limits = c(0, NA)   ) +   scale_colour_manual(values = okabe_ito_palette[c(1, 2)]) +   labs(     x = \"AGE (years)\",     y = \"BMI (kg/m\\u00B2)\",     colour = \"GAM: y ~ s(x, bs = \\\"cr\\\")\"   ) +   theme(     legend.position = c(0.01, 0.99),     legend.justification = c(\"left\", \"top\")   )"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"residuals","dir":"Articles","previous_headings":"","what":"Residuals","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"plot_residuals(   x = \"age\",   y = \"log(bmi)\",   fit = res ) +   plot_annotation(     title = \"Cubic Splines (Random Linear Splines) - BMI - Female\",     tag_levels = \"A\"   )"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"predicted-average-slopes","dir":"Articles","previous_headings":"","what":"Predicted Average Slopes","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"res_pred_slopes <- egg_slopes(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) ) head(res_pred_slopes) #>    ID pred_period_0 pred_period_0.5 pred_period_1.5 pred_period_3.5 #> 1 001      2.732883        2.944564        2.957204        3.008839 #> 2 004      2.655645        2.857561        2.852242        2.874241 #> 3 005      2.617361        2.828687        2.841831        2.899329 #> 4 006      2.564983        2.770892        2.772895        2.806881 #> 5 007      2.708577        2.932235        2.967428        3.058568 #> 6 009      2.629264        2.830376        2.824291        2.848131 #>   pred_period_6.5 pred_period_10 pred_period_12 pred_period_17 slope_0--0.5 #> 1        3.212888       3.425864       3.521036       3.616467    0.4233623 #> 2        3.049543       3.252807       3.353948       3.500953    0.4038318 #> 3        3.124311       3.380123       3.508675       3.715882    0.4226518 #> 4        2.993526       3.199952       3.298031       3.421888    0.4118177 #> 5        3.307871       3.552408       3.655346       3.737519    0.4473155 #> 6        3.034627       3.263737       3.385831       3.604892    0.4022230 #>   slope_1.5--3.5 slope_6.5--10 slope_12--17 #> 1     0.02581752    0.06085040   0.01908620 #> 2     0.01099952    0.05807523   0.02940106 #> 3     0.02874900    0.07308909   0.04144143 #> 4     0.01699345    0.05897876   0.02477156 #> 5     0.04557004    0.06986760   0.01643458 #> 6     0.01192013    0.06546007   0.04381225 plot_egg_slopes(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) ) #> Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"area-under-the-curve","dir":"Articles","previous_headings":"","what":"Area Under The Curve","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"res_auc <- egg_aucs(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) ) head(res_auc) #>    ID auc_0--0.5 auc_1.5--3.5 auc_6.5--10 auc_12--17 #> 1 001   1.431625     5.948346    11.65119   18.08524 #> 2 004   1.390543     5.707389    11.05500   17.35691 #> 3 005   1.373758     5.722382    11.41035   18.28601 #> 4 006   1.346219     5.561272    10.86764   17.02868 #> 5 007   1.422485     6.009543    12.04553   18.74309 #> 6 009   1.377140     5.652578    11.04401   17.68476 plot_egg_aucs(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) )"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"correlations","dir":"Articles","previous_headings":"","what":"Correlations","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"egg_correlations(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) ) #>               term  auc_0--0.5 auc_1.5--3.5 auc_6.5--10  auc_12--17 #>  1:     auc_0--0.5  1.00000000    0.7353315   0.1339844 -0.05890454 #>  2:   auc_1.5--3.5  0.73533146    1.0000000   0.7636209  0.55930198 #>  3:    auc_6.5--10  0.13398438    0.7636209   1.0000000  0.92716066 #>  4:     auc_12--17 -0.05890454    0.5593020   0.9271607  1.00000000 #>  5:   slope_0--0.5 -0.31696966    0.4092298   0.8827566  0.84524037 #>  6: slope_1.5--3.5 -0.35080310    0.3761391   0.8765640  0.87021489 #>  7:  slope_6.5--10 -0.50529327    0.1044868   0.6906019  0.88179769 #>  8:   slope_12--17 -0.24988479   -0.5206577  -0.4070861 -0.05033075 #>  9:    AP_ageyears -0.37200367    0.2662496   0.8172338  0.78849249 #> 10:    AR_ageyears  0.36773340   -0.2764872  -0.8414245 -0.83719400 #> 11:         AP_bmi  0.98613035    0.8780203   0.3266741  0.08070059 #> 12:         AR_bmi  0.84773402    0.9912778   0.6586349  0.41091290 #>     slope_0--0.5 slope_1.5--3.5 slope_6.5--10 slope_12--17 AP_ageyears #>  1:   -0.3169697     -0.3508031   -0.50529327  -0.24988479  -0.3720037 #>  2:    0.4092298      0.3761391    0.10448685  -0.52065769   0.2662496 #>  3:    0.8827566      0.8765640    0.69060185  -0.40708605   0.8172338 #>  4:    0.8452404      0.8702149    0.88179769  -0.05033075   0.7884925 #>  5:    1.0000000      0.9965866    0.80802780  -0.42159131   0.9911544 #>  6:    0.9965866      1.0000000    0.85390585  -0.34529353   0.9869343 #>  7:    0.8080278      0.8539058    1.00000000   0.19357033   0.7832160 #>  8:   -0.4215913     -0.3452935    0.19357033   1.00000000  -0.2729028 #>  9:    0.9911544      0.9869343    0.78321603  -0.27290277   1.0000000 #> 10:   -0.9969290     -0.9992709   -0.83026092   0.20818653  -0.9867121 #> 11:   -0.1848452     -0.2252452   -0.41171333  -0.36373209  -0.2175252 #> 12:    0.2043257      0.1649506   -0.08689073  -0.44388761   0.1579897 #>     AR_ageyears      AP_bmi      AR_bmi #>  1:   0.3677334  0.98613035  0.84773402 #>  2:  -0.2764872  0.87802031  0.99127780 #>  3:  -0.8414245  0.32667408  0.65863485 #>  4:  -0.8371940  0.08070059  0.41091290 #>  5:  -0.9969290 -0.18484522  0.20432572 #>  6:  -0.9992709 -0.22524516  0.16495064 #>  7:  -0.8302609 -0.41171333 -0.08689073 #>  8:   0.2081865 -0.36373209 -0.44388761 #>  9:  -0.9867121 -0.21752515  0.15798975 #> 10:   1.0000000  0.21535742 -0.17646094 #> 11:   0.2153574  1.00000000  0.91966781 #> 12:  -0.1764609  0.91966781  1.00000000"},{"path":"https://m.canouil.dev/eggla/articles/run-cubic-splines.html","id":"outliers","dir":"Articles","previous_headings":"","what":"Outliers","title":"Run The Cubic Splines (Random Cubic/Linear Splines) Analysis","text":"","code":"egg_outliers(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) )[   i = Outlier != 0,   j = head(.SD),   by = \"parameter\" ] #>       parameter  ID Row Distance_IQR Outlier_IQR Outlier #> 1:   auc_0--0.5 064  32     1.395147           1       1 #> 2: auc_1.5--3.5 007   5     1.307930           1       1 #> 3: auc_1.5--3.5 044  22     1.358904           1       1 #> 4:       AP_bmi 044  21     1.319709           1       1 #> 5:       AR_bmi 033  16     1.331621           1       1 #> 6:       AR_bmi 044  21     1.622874           1       1"},{"path":"https://m.canouil.dev/eggla/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mickaël Canouil. Author, maintainer. Nicole Warrington. Author. Kimberley Burrows. Author. Anni Heiskala. Author.","code":""},{"path":"https://m.canouil.dev/eggla/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Canouil M, Warrington N, Burrows K, Heiskala (2022). _eggla: Early Growth Genetics Longitudinal Analysis_. doi: 10.5281/zenodo.6979433","code":"@Manual{,   title = {eggla: Early Growth Genetics Longitudinal Analysis},   author = {Mickaël Canouil and Nicole Warrington and Kimberley Burrows and Anni Heiskala},   year = {2022},   url = {https://m.canouil.dev/eggla/},   keywords = {genetics, growth-curves, infancy, longitudinal-analysis, mixed-effects-models, r, r-package, r-stats, spline-regression},   abstract = {Tools for longitudinal analysis within the EGG (Early Growth Genetics) Consortium.},   doi = {10.5281/zenodo.6979433}, }"},{"path":"https://m.canouil.dev/eggla/index.html","id":"egg-longitudinal-analysis-","dir":"","previous_headings":"","what":"Early Growth Genetics Longitudinal Analysis","title":"Early Growth Genetics Longitudinal Analysis","text":"Tools longitudinal analysis within EGG (Early Growth Genetics) Consortium.","code":""},{"path":"https://m.canouil.dev/eggla/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Early Growth Genetics Longitudinal Analysis","text":"Install development version GitHub: Install particular version:","code":"# install.packages(\"remotes\") remotes::install_github(\"mcanouil/eggla\") # install.packages(\"remotes\") remotes::install_github(\"mcanouil/eggla@v0.19.0\") # or the latest stable version remotes::install_github(\"mcanouil/eggla@latest\")"},{"path":"https://m.canouil.dev/eggla/index.html","id":"docker-images","dir":"","previous_headings":"","what":"Docker Images","title":"Early Growth Genetics Longitudinal Analysis","text":"docker pull ghcr.io/mcanouil/eggla:devel. docker pull ghcr.io/mcanouil/eggla:latest.","code":""},{"path":"https://m.canouil.dev/eggla/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Early Growth Genetics Longitudinal Analysis","text":"MIT © Mickaël Canouil, Nicole Warrington, Kimberley Burrows, Anni Heiskala.","code":""},{"path":"https://m.canouil.dev/eggla/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Early Growth Genetics Longitudinal Analysis","text":"Please note eggla project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://m.canouil.dev/eggla/reference/bmigrowth.html","id":null,"dir":"Reference","previous_headings":"","what":"BMI Measurements For 100 Individuals From 0 To 17 Years. — bmigrowth","title":"BMI Measurements For 100 Individuals From 0 To 17 Years. — bmigrowth","text":"dataset containing age, sex, weight, height BMI 100 individuals. Measurements performed birth 17 years old.","code":""},{"path":"https://m.canouil.dev/eggla/reference/bmigrowth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BMI Measurements For 100 Individuals From 0 To 17 Years. — bmigrowth","text":"","code":"bmigrowth"},{"path":"https://m.canouil.dev/eggla/reference/bmigrowth.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BMI Measurements For 100 Individuals From 0 To 17 Years. — bmigrowth","text":"data frame 1050 rows 6 variables: ID (character) ID using three digits. age (numeric) age years. sex (integer) sex 1: male 0: female. weight (numeric) weight kilograms. height (integer) height centimetres. bmi (numeric) Body Mass Index kilograms per quare metre.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_apar.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute adiposity peak (AP) and adiposity rebound (AR). — compute_apar","title":"Compute adiposity peak (AP) and adiposity rebound (AR). — compute_apar","text":"Compute adiposity peak (AP) adiposity rebound (AR).","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_apar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute adiposity peak (AP) and adiposity rebound (AR). — compute_apar","text":"","code":"compute_apar(   fit,   from = c(\"predicted\", \"observed\"),   start = 0.25,   end = 10,   step = 0.01,   filter = NULL )"},{"path":"https://m.canouil.dev/eggla/reference/compute_apar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute adiposity peak (AP) and adiposity rebound (AR). — compute_apar","text":"fit model object statistical model call nlme::lme(), time_model() egg_model(). string indicating type data used AP AR computation, either \"predicted\" \"observed\". Default \"predicted\". start start time window compute AP AR. end end time window compute AP AR. step step increment sequence. filter string following data.table syntax filtering \"\" (.e., row elements), e.g., filter = \"source == ''\". Argument pass compute_apar() (see predict_bmi()). Default NULL.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_apar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute adiposity peak (AP) and adiposity rebound (AR). — compute_apar","text":"data.table object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_apar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute adiposity peak (AP) and adiposity rebound (AR). — compute_apar","text":"","code":"library(eggla) data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   )  head(compute_apar(fit = res, from = \"predicted\")[AP | AR]) #>    egg_id egg_ageyears  egg_bmi    AP    AR #> 1:    001         0.77 20.36074  TRUE FALSE #> 2:    001         2.04 19.83158 FALSE  TRUE #> 3:    004         0.79 17.37386  TRUE FALSE #> 4:    004         1.90 17.02318 FALSE  TRUE #> 5:    005         0.79 17.66391  TRUE FALSE #> 6:    005         1.83 17.35547 FALSE  TRUE  # Comparing observed and predicted values library(data.table) library(ggplot2) library(patchwork) list_gg <- melt(   data = rbindlist(     l = lapply(       X = (function(.x) `names<-`(.x, .x))(c(\"predicted\", \"observed\")),       FUN = compute_apar,       fit = res     ),     idcol = \"from\"   )[     AP | AR   ][     j = what := fifelse(paste(AP, AR) %in% paste(FALSE, TRUE), \"AR\", \"AP\")   ],   id.vars = c(\"from\", \"egg_id\", \"what\"),   measure.vars = c(\"egg_ageyears\", \"egg_bmi\") )[   j = list(gg = list({     dt <- dcast(data = .SD, formula = egg_id + what ~ from)     range_xy <- range(dt[, c(\"observed\", \"predicted\")], na.rm = TRUE)     ggplot(data = dt) +       aes(x = observed, y = predicted, colour = what) +       geom_abline(intercept = 0, slope = 1) +       geom_segment(aes(xend = observed, yend = observed), alpha = 0.5) +       geom_point() +       scale_colour_manual(values = c(\"#E69F00FF\", \"#56B4E9FF\")) +       labs(         x = sprintf(\"Observed: %s\", sub(\".*_\", \"\", toupper(variable))),         y = sprintf(\"Predicted: %s\", sub(\".*_\", \"\", toupper(variable))),         colour = NULL,         title = sub(\".*_\", \"\", toupper(variable))       ) +       coord_cartesian(xlim = range_xy, ylim = range_xy)   })),   by = \"variable\" ] wrap_plots(list_gg[[\"gg\"]], guides = \"collect\") #> Warning: Removed 7 rows containing missing values (`geom_segment()`). #> Warning: Removed 7 rows containing missing values (`geom_point()`). #> Warning: Removed 7 rows containing missing values (`geom_segment()`). #> Warning: Removed 7 rows containing missing values (`geom_point()`)."},{"path":"https://m.canouil.dev/eggla/reference/compute_aucs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute area under the curves for several intervals using a model fitted by time_model(). — compute_aucs","title":"Compute area under the curves for several intervals using a model fitted by time_model(). — compute_aucs","text":"Compute area curves \"clubic slope\", \"linear splines\" \"cubic splines\" fitted using time_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_aucs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute area under the curves for several intervals using a model fitted by time_model(). — compute_aucs","text":"","code":"compute_aucs(   fit,   method,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]] )"},{"path":"https://m.canouil.dev/eggla/reference/compute_aucs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute area under the curves for several intervals using a model fitted by time_model(). — compute_aucs","text":"fit model object statistical model call time_model(). method type model provided fit, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". period intervals knots AUCs computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_aucs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute area under the curves for several intervals using a model fitted by time_model(). — compute_aucs","text":"data.frame AUC individuals/samples.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_aucs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute area under the curves for several intervals using a model fitted by time_model(). — compute_aucs","text":"","code":"data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"linear_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)), #>   data = data, #>   random = ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) head(compute_aucs(   fit = ls_mod,   method = \"linear_splines\",   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17)#,   # knots = list(   #   \"cubic_slope\" = NULL,   #   \"linear_splines\" = c(5.5, 11),   #   \"cubic_splines\" = c(1, 8, 12)   # )[[method]] )) #>    ID auc_0--0.5 auc_1.5--3.5 auc_6.5--10 auc_12--17 #> 1 082   1.434832     6.035980    11.64133   18.71292 #> 2 083   1.375670     5.741860    11.22260   18.09509 #> 3 080   1.372641     5.745654    11.29590   18.30251 #> 4 031   1.340321     5.496530    10.74635   17.17095 #> 5 007   1.375062     5.969051    11.89991   19.70606 #> 6 033   1.387283     5.649996    10.88080   17.21517"},{"path":"https://m.canouil.dev/eggla/reference/compute_correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the derived parameters correlations from a cubic splines mixed-effects model by time_model(). — compute_correlations","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by time_model(). — compute_correlations","text":"Based computed area curves (.e., compute_aucs()) slopes (.e., compute_slopes()) several intervals using model fitted time_model(), compute correlations intervals derived parameters.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by time_model(). — compute_correlations","text":"","code":"compute_correlations(   fit,   method,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]] )"},{"path":"https://m.canouil.dev/eggla/reference/compute_correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by time_model(). — compute_correlations","text":"fit model object statistical model call time_model(). method type model provided fit, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". period intervals knots AUCs computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by time_model(). — compute_correlations","text":"list object correlations intervals derived parameters.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_correlations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by time_model(). — compute_correlations","text":"","code":"data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"linear_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)), #>   data = data, #>   random = ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) compute_correlations(   fit = ls_mod,   method = \"linear_splines\",   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17)#,   # knots = list(   #   \"cubic_slope\" = NULL,   #   \"linear_splines\" = c(5.5, 11),   #   \"cubic_splines\" = c(1, 8, 12)   # )[[method]] ) #> $AUC #>            term auc_0--0.5 auc_1.5--3.5 auc_6.5--10 auc_12--17 #> 1:   auc_0--0.5  1.0000000    0.6718608   0.1460928 -0.0965362 #> 2: auc_1.5--3.5  0.6718608    1.0000000   0.8260759  0.6665989 #> 3:  auc_6.5--10  0.1460928    0.8260759   1.0000000  0.9704485 #> 4:   auc_12--17 -0.0965362    0.6665989   0.9704485  1.0000000 #>  #> $SLOPE #>              term slope_0--0.5 slope_1.5--3.5 slope_6.5--10 slope_12--17 #> 1:   slope_0--0.5    1.0000000      1.0000000    -0.7037694    0.9934862 #> 2: slope_1.5--3.5    1.0000000      1.0000000    -0.7037694    0.9934862 #> 3:  slope_6.5--10   -0.7037694     -0.7037694     1.0000000   -0.7768949 #> 4:   slope_12--17    0.9934862      0.9934862    -0.7768949    1.0000000 #>"},{"path":"https://m.canouil.dev/eggla/reference/compute_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute outliers detection in derived parameters from a cubic splines mixed-effects model by time_model(). — compute_outliers","title":"Compute outliers detection in derived parameters from a cubic splines mixed-effects model by time_model(). — compute_outliers","text":"Based computed area curves (.e., compute_aucs()) slopes (.e., compute_slopes()) several intervals using model fitted time_model(), compute outlier detection. details, see methods iqr zscore performance::check_outliers().","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute outliers detection in derived parameters from a cubic splines mixed-effects model by time_model(). — compute_outliers","text":"","code":"compute_outliers(   fit,   method,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]],   from = c(\"predicted\", \"observed\"),   start = 0.25,   end = 10,   step = 0.01,   filter = NULL,   outlier_method = \"iqr\",   outlier_threshold = list(iqr = 2) )"},{"path":"https://m.canouil.dev/eggla/reference/compute_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute outliers detection in derived parameters from a cubic splines mixed-effects model by time_model(). — compute_outliers","text":"fit model object statistical model call time_model(). method type model provided fit, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". period intervals knots AUCs computed. knots knots defined fit according method. string indicating type data used AP AR computation, either \"predicted\" \"observed\". Default \"predicted\". start start time window compute AP AR. end end time window compute AP AR. step step increment sequence. filter string following data.table syntax filtering \"\" (.e., row elements), e.g., filter = \"source == ''\". Argument pass compute_apar() (see predict_bmi()). Default NULL. outlier_method outlier detection method(s). Default \"iqr\". Can \"cook\", \"pareto\", \"zscore\", \"zscore_robust\", \"iqr\", \"ci\", \"eti\", \"hdi\", \"bci\", \"mahalanobis\", \"mahalanobis_robust\", \"mcd\", \"ics\", \"optics\" \"lof\". See performance::check_outliers() https://easystats.github.io/performance/reference/check_outliers.html details. outlier_threshold list containing threshold values method (e.g., list('mahalanobis' = 7, 'cook' = 1)), observation considered outlier. NULL, default values used (see 'Details'). numeric value given, used threshold method run. See performance::check_outliers() https://easystats.github.io/performance/reference/check_outliers.html details.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute outliers detection in derived parameters from a cubic splines mixed-effects model by time_model(). — compute_outliers","text":"data.frame listing individuals outliers based several criteria.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute outliers detection in derived parameters from a cubic splines mixed-effects model by time_model(). — compute_outliers","text":"","code":"data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"cubic_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>   data = data, #>   random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) head(compute_outliers(   fit = ls_mod,   method = \"cubic_splines\",   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17)#,   # knots = list(   #   \"cubic_slope\" = NULL,   #   \"linear_splines\" = c(5.5, 11),   #   \"cubic_splines\" = c(1, 8, 12)   # )[[method]] )[Outlier != 0]) #>       parameter  ID Row Distance_IQR Outlier_IQR Outlier #> 1: slope_0--0.5 007   5     1.296996           1       1 #> 2:  AR_ageyears 039  15     1.679752           1       1 #> 3:       AP_bmi 044  16     1.592689           1       1"},{"path":"https://m.canouil.dev/eggla/reference/compute_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict average slopes for several intervals using a model fitted by time_model(). — compute_slopes","title":"Predict average slopes for several intervals using a model fitted by time_model(). — compute_slopes","text":"Comoute average slopes \"clubic slope\", \"linear splines\" \"cubic splines\" fitted using time_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict average slopes for several intervals using a model fitted by time_model(). — compute_slopes","text":"","code":"compute_slopes(   fit,   method,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]] )"},{"path":"https://m.canouil.dev/eggla/reference/compute_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict average slopes for several intervals using a model fitted by time_model(). — compute_slopes","text":"fit model object statistical model call time_model(). method type model provided fit, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". period intervals knots slopes computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict average slopes for several intervals using a model fitted by time_model(). — compute_slopes","text":"data.frame slopes individuals/samples.","code":""},{"path":"https://m.canouil.dev/eggla/reference/compute_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict average slopes for several intervals using a model fitted by time_model(). — compute_slopes","text":"","code":"data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"linear_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)), #>   data = data, #>   random = ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) head(compute_slopes(   fit = ls_mod,   method = \"linear_splines\",   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17)#,   # knots = list(   #   \"cubic_slope\" = NULL,   #   \"linear_splines\" = c(5.5, 11),   #   \"cubic_splines\" = c(1, 8, 12)   # )[[method]] )) #>    ID pred_period_0 pred_period_0.5 pred_period_1.5 pred_period_3.5 #> 1 082      2.853184        2.886145        2.952068        3.083912 #> 2 083      2.738052        2.764628        2.817779        2.924081 #> 3 080      2.731110        2.759454        2.816140        2.929513 #> 4 031      2.673129        2.688156        2.718211        2.778319 #> 5 007      2.724079        2.776169        2.880347        3.088704 #> 6 033      2.768962        2.780169        2.802583        2.847412 #>   pred_period_6.5 pred_period_10 pred_period_12 pred_period_17 slope_0--0.5 #> 1        3.255880       3.396309       3.523904       3.961264   0.06592240 #> 2        3.094410       3.318502       3.450097       3.787938   0.05315120 #> 3        3.109982       3.344816       3.482937       3.838067   0.05668656 #> 4        2.922776       3.217996       3.340014       3.528365   0.03005422 #> 5        3.334484       3.465463       3.628122       4.254301   0.10417844 #> 6        2.970990       3.246609       3.358980       3.527090   0.02241449 #>   slope_1.5--3.5 slope_6.5--10 slope_12--17 #> 1     0.06592240    0.04012263   0.08747201 #> 2     0.05315120    0.06402629   0.06756830 #> 3     0.05668656    0.06709536   0.07102607 #> 4     0.03005422    0.08434848   0.03767015 #> 5     0.10417844    0.03742271   0.12523595 #> 6     0.02241449    0.07874839   0.03362208"},{"path":"https://m.canouil.dev/eggla/reference/egg_aucs.html","id":null,"dir":"Reference","previous_headings":"","what":"Derived areas under the curve from a cubic splines mixed-effects model by egg_model(). — egg_aucs","title":"Derived areas under the curve from a cubic splines mixed-effects model by egg_model(). — egg_aucs","text":"Derived areas curve (AUCs) differentintervals based fitted cubic splines mixed-effects model egg_model(). function specific version compute_aucs designed work specifically egg_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_aucs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derived areas under the curve from a cubic splines mixed-effects model by egg_model(). — egg_aucs","text":"","code":"egg_aucs(   fit,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) )"},{"path":"https://m.canouil.dev/eggla/reference/egg_aucs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derived areas under the curve from a cubic splines mixed-effects model by egg_model(). — egg_aucs","text":"fit model object statistical model call egg_model(). period intervals knots AUCs computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_aucs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derived areas under the curve from a cubic splines mixed-effects model by egg_model(). — egg_aucs","text":"data.frame AUC individuals/samples.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_aucs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derived areas under the curve from a cubic splines mixed-effects model by egg_model(). — egg_aucs","text":"","code":"data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) head(   egg_aucs(     fit = res,     period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),     knots = c(1, 8, 12)   ) ) #>    ID auc_0--0.5 auc_1.5--3.5 auc_6.5--10 auc_12--17 #> 1 082   1.449505     5.991573    11.68926   18.61057 #> 2 083   1.368861     5.691437    11.26439   18.15945 #> 3 080   1.376442     5.733387    11.38980   18.41934 #> 4 031   1.326633     5.480013    10.70427   17.06404 #> 5 007   1.389835     5.947658    12.48345   21.09767 #> 6 033   1.374043     5.643367    10.87259   17.12197"},{"path":"https://m.canouil.dev/eggla/reference/egg_correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the derived parameters correlations from a cubic splines mixed-effects model by egg_model(). — egg_correlations","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by egg_model(). — egg_correlations","text":"Based computed area curves (.e., egg_aucs()) slopes (.e., egg_slopes()) several intervals using model fitted egg_model(), compute correlations intervals derived parameters.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by egg_model(). — egg_correlations","text":"","code":"egg_correlations(   fit,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12),   start = 0.25,   end = 10,   step = 0.01,   filter = NULL )"},{"path":"https://m.canouil.dev/eggla/reference/egg_correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by egg_model(). — egg_correlations","text":"fit model object statistical model call egg_model(). period intervals knots slopes computed. knots knots defined fit according method. start start time window compute AP AR. end end time window compute AP AR. step step increment sequence. filter string following data.table syntax filtering \"\" (.e., row elements), e.g., filter = \"source == ''\". Argument pass compute_apar() (see predict_bmi()). Default NULL.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by egg_model(). — egg_correlations","text":"data.table object correlations intervals derived parameters.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_correlations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the derived parameters correlations from a cubic splines mixed-effects model by egg_model(). — egg_correlations","text":"","code":"data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) egg_correlations(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) ) #>               term  auc_0--0.5 auc_1.5--3.5 auc_6.5--10  auc_12--17 #>  1:     auc_0--0.5  1.00000000  0.859252018   0.2700879  0.04034598 #>  2:   auc_1.5--3.5  0.85925202  1.000000000   0.7246146  0.54580335 #>  3:    auc_6.5--10  0.27008793  0.724614595   1.0000000  0.97294865 #>  4:     auc_12--17  0.04034598  0.545803351   0.9729487  1.00000000 #>  5:   slope_0--0.5 -0.25795687  0.272589791   0.8605788  0.95496224 #>  6: slope_1.5--3.5 -0.25795687  0.272589791   0.8605788  0.95496224 #>  7:  slope_6.5--10 -0.25795687  0.272589791   0.8605788  0.95496224 #>  8:   slope_12--17 -0.25795687  0.272589791   0.8605788  0.95496224 #>  9:    AP_ageyears -0.13447706 -0.027491885   0.1436239  0.18508440 #> 10:    AR_ageyears  0.11381109  0.008036533  -0.1520584 -0.18841083 #> 11:         AP_bmi  0.04998234  0.203225932   0.3332056  0.33380623 #> 12:         AR_bmi  0.02613401  0.211353851   0.3847213  0.39375327 #>     slope_0--0.5 slope_1.5--3.5 slope_6.5--10 slope_12--17 AP_ageyears #>  1:   -0.2579569     -0.2579569    -0.2579569   -0.2579569 -0.13447706 #>  2:    0.2725898      0.2725898     0.2725898    0.2725898 -0.02749188 #>  3:    0.8605788      0.8605788     0.8605788    0.8605788  0.14362394 #>  4:    0.9549622      0.9549622     0.9549622    0.9549622  0.18508440 #>  5:    1.0000000      1.0000000     1.0000000    1.0000000  0.22028242 #>  6:    1.0000000      1.0000000     1.0000000    1.0000000  0.22028242 #>  7:    1.0000000      1.0000000     1.0000000    1.0000000  0.22028242 #>  8:    1.0000000      1.0000000     1.0000000    1.0000000  0.22028242 #>  9:    0.2202824      0.2202824     0.2202824    0.2202824  1.00000000 #> 10:   -0.2167862     -0.2167862    -0.2167862   -0.2167862 -0.98172755 #> 11:    0.3028106      0.3028106     0.3028106    0.3028106 -0.19277915 #> 12:    0.3677929      0.3677929     0.3677929    0.3677929  0.07898939 #>      AR_ageyears      AP_bmi      AR_bmi #>  1:  0.113811093  0.04998234  0.02613401 #>  2:  0.008036533  0.20322593  0.21135385 #>  3: -0.152058450  0.33320559  0.38472130 #>  4: -0.188410834  0.33380623  0.39375327 #>  5: -0.216786188  0.30281065  0.36779290 #>  6: -0.216786188  0.30281065  0.36779290 #>  7: -0.216786188  0.30281065  0.36779290 #>  8: -0.216786188  0.30281065  0.36779290 #>  9: -0.981727551 -0.19277915  0.07898939 #> 10:  1.000000000  0.19568524 -0.08802453 #> 11:  0.195685241  1.00000000  0.95865749 #> 12: -0.088024530  0.95865749  1.00000000"},{"path":"https://m.canouil.dev/eggla/reference/egg_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a cubic splines mixed model. — egg_model","title":"Fit a cubic splines mixed model. — egg_model","text":"Fit cubic splines mixed model regression three splines parametrisation random effect. function specific version time_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a cubic splines mixed model. — egg_model","text":"","code":"egg_model(   formula,   data,   id_var,   random_complexity = \"auto\",   use_car1 = FALSE,   knots = c(1, 8, 12),   quiet = FALSE )"},{"path":"https://m.canouil.dev/eggla/reference/egg_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a cubic splines mixed model. — egg_model","text":"formula object class \"formula\": symbolic description model fitted , time component first term right-hand side. data data.frame containing variables defined formula. id_var string indicating name variable used individual identifier. random_complexity numeric (1-3) indicating complexity random effect term. Default, \"auto\" try complex less complex success. use_car1 logical indicating whether use continuous auto-correlation, .e., CAR(1) correlation structure. knots knots defining splines. quiet logical indicating whether suppress output.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a cubic splines mixed model. — egg_model","text":"object class \"lme\" representing linear mixed-effects model fit.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a cubic splines mixed model. — egg_model","text":"","code":"data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) sres <- as.data.frame(summary(res)[[\"tTable\"]]) rownames(sres) <- sub(\"gsp\\\\(.*\\\\)\\\\)\", \"gsp(...)\", rownames(sres)) sres #>                       Value   Std.Error  DF    t-value      p-value #> (Intercept)      2.61835319 0.015188427 478 172.391333 0.000000e+00 #> gsp(...)D1(0)    0.87980825 0.048919989 478  17.984637 1.302790e-55 #> gsp(...)D2(0)   -1.88100110 0.111960756 478 -16.800540 4.066384e-50 #> gsp(...)D3(0)    1.92287448 0.115451496 478  16.655258 1.893585e-49 #> gsp(...)C(1).3  -1.93037598 0.116238553 478 -16.607020 3.153399e-49 #> gsp(...)C(8).3   0.01240328 0.004270085 478   2.904692 3.846473e-03 #> gsp(...)C(12).3 -0.01521666 0.011250159 478  -1.352573 1.768316e-01"},{"path":"https://m.canouil.dev/eggla/reference/egg_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute outliers detection in AUCs/Slopes derived parameters from a cubic splines mixed-effects model by egg_model(). — egg_outliers","title":"Compute outliers detection in AUCs/Slopes derived parameters from a cubic splines mixed-effects model by egg_model(). — egg_outliers","text":"Based computed area curves (.e., egg_aucs()) slopes (.e., egg_slopes()) several intervals using model fitted egg_model(), compute outlier detection. details, see methods iqr zscore performance::check_outliers().","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute outliers detection in AUCs/Slopes derived parameters from a cubic splines mixed-effects model by egg_model(). — egg_outliers","text":"","code":"egg_outliers(   fit,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12),   from = c(\"predicted\", \"observed\"),   start = 0.25,   end = 10,   step = 0.01,   filter = NULL,   outlier_method = \"iqr\",   outlier_threshold = list(iqr = 2) )"},{"path":"https://m.canouil.dev/eggla/reference/egg_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute outliers detection in AUCs/Slopes derived parameters from a cubic splines mixed-effects model by egg_model(). — egg_outliers","text":"fit model object statistical model call egg_model(). period intervals knots slopes computed. knots knots defined fit according method. string indicating type data used AP AR computation, either \"predicted\" \"observed\". Default \"predicted\". start start time window compute AP AR. end end time window compute AP AR. step step increment sequence. filter string following data.table syntax filtering \"\" (.e., row elements), e.g., filter = \"source == ''\". Argument pass compute_apar() (see predict_bmi()). Default NULL. outlier_method outlier detection method(s). Default \"iqr\". Can \"cook\", \"pareto\", \"zscore\", \"zscore_robust\", \"iqr\", \"ci\", \"eti\", \"hdi\", \"bci\", \"mahalanobis\", \"mahalanobis_robust\", \"mcd\", \"ics\", \"optics\" \"lof\". See performance::check_outliers() https://easystats.github.io/performance/reference/check_outliers.html details. outlier_threshold list containing threshold values method (e.g., list('mahalanobis' = 7, 'cook' = 1)), observation considered outlier. NULL, default values used (see 'Details'). numeric value given, used threshold method run. See performance::check_outliers() https://easystats.github.io/performance/reference/check_outliers.html details.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute outliers detection in AUCs/Slopes derived parameters from a cubic splines mixed-effects model by egg_model(). — egg_outliers","text":"data.frame listing individuals outliers based several criteria.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute outliers detection in AUCs/Slopes derived parameters from a cubic splines mixed-effects model by egg_model(). — egg_outliers","text":"","code":"data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) head(egg_outliers(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) )[Outlier != 0]) #>      parameter  ID Row Distance_IQR Outlier_IQR Outlier #> 1:  auc_0--0.5 048  25     1.577435           1       1 #> 2:  auc_0--0.5 049  26     1.363501           1       1 #> 3: AR_ageyears 081  39     1.280303           1       1 #> 4:      AP_bmi 001   1     1.295708           1       1 #> 5:      AP_bmi 033  16     1.375866           1       1 #> 6:      AP_bmi 044  21     1.791523           1       1"},{"path":"https://m.canouil.dev/eggla/reference/egg_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Derived slopes from a cubic splines mixed-effects model by egg_model(). — egg_slopes","title":"Derived slopes from a cubic splines mixed-effects model by egg_model(). — egg_slopes","text":"Derived slopes different intervals based fitted cubic splines mixed-effects model egg_model(). function specific version compute_slopes designed work specifically egg_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derived slopes from a cubic splines mixed-effects model by egg_model(). — egg_slopes","text":"","code":"egg_slopes(   fit,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) )"},{"path":"https://m.canouil.dev/eggla/reference/egg_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derived slopes from a cubic splines mixed-effects model by egg_model(). — egg_slopes","text":"fit model object statistical model call egg_model(). period intervals knots slopes computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derived slopes from a cubic splines mixed-effects model by egg_model(). — egg_slopes","text":"data.frame slopes individuals/samples.","code":""},{"path":"https://m.canouil.dev/eggla/reference/egg_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derived slopes from a cubic splines mixed-effects model by egg_model(). — egg_slopes","text":"","code":"data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) head(   egg_slopes(     fit = res,     period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),     knots = c(1, 8, 12)   ) ) #>    ID pred_period_0 pred_period_0.5 pred_period_1.5 pred_period_3.5 #> 1 082      2.747393        2.992282        2.992529        3.019458 #> 2 083      2.584858        2.832240        2.837474        2.874377 #> 3 080      2.599374        2.848047        2.855865        2.897935 #> 4 031      2.502765        2.745423        2.741210        2.759217 #> 5 007      2.617232        2.883761        2.927290        3.040782 #> 6 033      2.599044        2.838782        2.828728        2.835054 #>   pred_period_6.5 pred_period_10 pred_period_12 pred_period_17 slope_0--0.5 #> 1        3.214495       3.451351       3.572620       3.801536    0.4897771 #> 2        3.084375       3.338686       3.469929       3.723779    0.4947641 #> 3        3.115684       3.379037       3.515447       3.782216    0.4973477 #> 4        2.940873       3.162117       3.274465       3.481078    0.4853166 #> 5        3.365663       3.754004       3.961836       4.407159    0.5330586 #> 6        2.999186       3.199988       3.300654       3.478063    0.4794758 #>   slope_1.5--3.5 slope_6.5--10 slope_12--17 #> 1    0.013464426    0.06767327   0.04578315 #> 2    0.018451390    0.07266024   0.05077012 #> 3    0.021034976    0.07524382   0.05335370 #> 4    0.009003883    0.06321273   0.04132261 #> 5    0.056745859    0.11095471   0.08906459 #> 6    0.003163056    0.05737190   0.03548178"},{"path":"https://m.canouil.dev/eggla/reference/eggla-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eggla: Early Growth Genetics Longitudinal Analysis — eggla-package","title":"eggla: Early Growth Genetics Longitudinal Analysis — eggla-package","text":"Tools longitudinal analysis within EGG (Early Growth Genetics) Consortium (http://egg-consortium.org/).","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/reference/eggla-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eggla: Early Growth Genetics Longitudinal Analysis — eggla-package","text":"Maintainer: Mickaël Canouil pro@mickael.canouil.dev (ORCID) Authors: Nicole Warrington n.warrington@uq.edu.au (ORCID) Kimberley Burrows Kimberley.Burrows@bristol.ac.uk (ORCID) Anni Heiskala Anni.Heiskala@oulu.fi","code":""},{"path":"https://m.canouil.dev/eggla/reference/gsp.html","id":null,"dir":"Reference","previous_headings":"","what":"General regression splines with variable degrees and ness, smoothing splines. — gsp","title":"General regression splines with variable degrees and ness, smoothing splines. — gsp","text":"https://github.com/gmonette/spida2 namespace dependencies properly listed. Source: https://github.com/gmonette/spida2/blob/master/R/gsp.R, https://github.com/gmonette/spida2/blob/master/R/gsp_util.R","code":""},{"path":"https://m.canouil.dev/eggla/reference/gsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General regression splines with variable degrees and ness, smoothing splines. — gsp","text":"","code":"gsp(   x,   knots,   degree = 3,   smoothness = pmax(pmin(degree[-1], degree[-length(degree)]) - 1, -1),   lin = NULL,   periodic = FALSE,   intercept = 0,   signif = 3 )"},{"path":"https://m.canouil.dev/eggla/reference/gsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General regression splines with variable degrees and ness, smoothing splines. — gsp","text":"x value(s) spline evaluated. knots vector knots. degree vector giving degree spline interval. Note number intervals equal number knots + 1. value 0 corresponds constant interval. spline evaluate 0 interval, use intercept argument specify value interval spline must evaluate 0. smoothness vector degree smoothness knot (0 = continuity, 1 = smoothness continuous first derivative, 2 = continuous second derivative, etc. value -1 allows discontinuity knot. scalar recycled length equals number knots. Alternatively, list length equal number knots. element list vector orders derivatives required smooth. allows non-sequential constraints, e.g., first second derivative either side knot possible discontinuity change higher-order derivatives, vector c(1,2). Note list used, elements must provide desired constraints. list argument corresponding smoothness = c(1,2,-1) smoothness=list(0:1, 0:2, -1). lin provides matrix specifying additional linear contraints 'full' parametrization consisting blocks polynomials degree equal max(degree) length(knots)+1 intervals spline. See examples spline 0 outside boundary knots. periodic TRUE generates period spline base interval (0,max(knots)). constraint generated coefficients generate values right max(knots) right 0. Note knots strictly positive. intercept value(s) x spline value 0, .e., value(s) x yhat estimated intercept term model. default 0. NULL, spline constrained evaluate 0 x. signif number significant digits used label coefficients.","code":""},{"path":"https://m.canouil.dev/eggla/reference/gsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General regression splines with variable degrees and ness, smoothing splines. — gsp","text":"gsp returns matrix generating spline.","code":""},{"path":"https://m.canouil.dev/eggla/reference/gsp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"General regression splines with variable degrees and ness, smoothing splines. — gsp","text":"Monette, G. georges@yorku.ca","code":""},{"path":"https://m.canouil.dev/eggla/reference/gsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General regression splines with variable degrees and ness, smoothing splines. — gsp","text":"","code":"simd <- data.frame(   age = rep(1:50, 2),   y = sin(2 * pi * (1:100) / 5) + rnorm(100),   G = rep(c(\"male\", \"female\"), c(50, 50)) ) sp <- function(x) {   gsp(x, knots = c(10, 25, 40), degree = c(1, 2, 2, 1), smoothness = c(1, 1 ,1)) }  summary(lm(formula = y ~ sp(age) * G, data = simd)) #>  #> Call: #> lm(formula = y ~ sp(age) * G, data = simd) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.4279 -0.6742  0.0616  0.8999  2.6126  #>  #> Coefficients: #>                        Estimate Std. Error t value Pr(>|t|) #> (Intercept)           0.2746532  0.6522280   0.421    0.675 #> sp(age)D1(0)         -0.0050214  0.0594605  -0.084    0.933 #> sp(age)C(10).2        0.0007455  0.0074488   0.100    0.920 #> sp(age)C(25).2       -0.0038225  0.0138840  -0.275    0.784 #> Gmale                 0.2242795  0.9223897   0.243    0.808 #> sp(age)D1(0):Gmale   -0.0464230  0.0840899  -0.552    0.582 #> sp(age)C(10).2:Gmale  0.0053382  0.0105342   0.507    0.614 #> sp(age)C(25).2:Gmale -0.0103768  0.0196350  -0.528    0.598 #>  #> Residual standard error: 1.32 on 92 degrees of freedom #> Multiple R-squared:  0.06941,\tAdjusted R-squared:  -0.001391  #> F-statistic: 0.9803 on 7 and 92 DF,  p-value: 0.4504 #>"},{"path":"https://m.canouil.dev/eggla/reference/plot_aucs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot derived area under the curves from a model fitted by time_model(). — plot_aucs","title":"Plot derived area under the curves from a model fitted by time_model(). — plot_aucs","text":"Plot derived area curves model fitted time_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_aucs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot derived area under the curves from a model fitted by time_model(). — plot_aucs","text":"","code":"plot_aucs(   fit,   method,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]] )"},{"path":"https://m.canouil.dev/eggla/reference/plot_aucs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot derived area under the curves from a model fitted by time_model(). — plot_aucs","text":"fit model object statistical model call time_model(). method type model provided fit, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". period intervals knots AUCs computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_aucs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot derived area under the curves from a model fitted by time_model(). — plot_aucs","text":"patchwork  ggplot2 object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_aucs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot derived area under the curves from a model fitted by time_model(). — plot_aucs","text":"","code":"library(ggplot2) library(eggla) data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"linear_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)), #>   data = data, #>   random = ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) plot_aucs(   fit = ls_mod,   method = \"linear_splines\" )"},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_aucs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot derived area under the curves from a model fitted by egg_model(). — plot_egg_aucs","title":"Plot derived area under the curves from a model fitted by egg_model(). — plot_egg_aucs","text":"Plot derived area curves model fitted egg_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_aucs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot derived area under the curves from a model fitted by egg_model(). — plot_egg_aucs","text":"","code":"plot_egg_aucs(   fit,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) )"},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_aucs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot derived area under the curves from a model fitted by egg_model(). — plot_egg_aucs","text":"fit model object statistical model call egg_model(). period intervals knots AUCs computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_aucs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot derived area under the curves from a model fitted by egg_model(). — plot_egg_aucs","text":"patchwork  ggplot2 object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_aucs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot derived area under the curves from a model fitted by egg_model(). — plot_egg_aucs","text":"","code":"library(ggplot2) library(eggla) data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) plot_egg_aucs(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) )"},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot derived slopes from a model fitted by egg_model(). — plot_egg_slopes","title":"Plot derived slopes from a model fitted by egg_model(). — plot_egg_slopes","text":"Plot derived slopes model fitted egg_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot derived slopes from a model fitted by egg_model(). — plot_egg_slopes","text":"","code":"plot_egg_slopes(   fit,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = c(1, 8, 12) )"},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot derived slopes from a model fitted by egg_model(). — plot_egg_slopes","text":"fit model object statistical model call egg_model(). period intervals knots slopes computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot derived slopes from a model fitted by egg_model(). — plot_egg_slopes","text":"patchwork  ggplot2 object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_egg_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot derived slopes from a model fitted by egg_model(). — plot_egg_slopes","text":"","code":"library(ggplot2) library(eggla) data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) plot_egg_slopes(   fit = res,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17) ) #> Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"https://m.canouil.dev/eggla/reference/plot_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot several residuals plots for diagnostics. — plot_residuals","title":"Plot several residuals plots for diagnostics. — plot_residuals","text":"Plot several residuals plots diagnostics.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot several residuals plots for diagnostics. — plot_residuals","text":"","code":"plot_residuals(x, y, fit)"},{"path":"https://m.canouil.dev/eggla/reference/plot_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot several residuals plots for diagnostics. — plot_residuals","text":"x length one character vector main covariate name (.e., right-hand side), defined fit. y length one character vector variable name explained (.e., left-hand side), defined fit. fit model object statistical model call time_model() egg_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot several residuals plots for diagnostics. — plot_residuals","text":"patchwork  ggplot2 object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot several residuals plots for diagnostics. — plot_residuals","text":"","code":"library(ggplot2) library(patchwork) library(eggla) data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   ) plot_residuals(   x = \"age\",   y = \"log(bmi)\",   fit = res ) +   plot_annotation(     title = \"Cubic Splines (Random Linear Splines) - BMI - Female\",     tag_levels = \"A\"   )"},{"path":"https://m.canouil.dev/eggla/reference/plot_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot derived slopes from a model fitted by time_model(). — plot_slopes","title":"Plot derived slopes from a model fitted by time_model(). — plot_slopes","text":"Plot derived slopes model fitted time_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot derived slopes from a model fitted by time_model(). — plot_slopes","text":"","code":"plot_slopes(   fit,   method,   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]] )"},{"path":"https://m.canouil.dev/eggla/reference/plot_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot derived slopes from a model fitted by time_model(). — plot_slopes","text":"fit model object statistical model call time_model(). method type model provided fit, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". period intervals knots AUCs computed. knots knots defined fit according method.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot derived slopes from a model fitted by time_model(). — plot_slopes","text":"patchwork  ggplot2 object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/plot_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot derived slopes from a model fitted by time_model(). — plot_slopes","text":"","code":"library(ggplot2) library(eggla) data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"linear_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)), #>   data = data, #>   random = ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) plot_slopes(   fit = ls_mod,   method = \"linear_splines\" ) #> Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"https://m.canouil.dev/eggla/reference/predict_bmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict BMI for a range of ages from a model fit. — predict_bmi","title":"Predict BMI for a range of ages from a model fit. — predict_bmi","text":"Predict BMI values cubic splines mixed model regression three splines parametrisation random effect. function also works model obtained using time_model().","code":""},{"path":"https://m.canouil.dev/eggla/reference/predict_bmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict BMI for a range of ages from a model fit. — predict_bmi","text":"","code":"predict_bmi(fit, start = 0.25, end = 10, step = 0.01, filter = NULL)"},{"path":"https://m.canouil.dev/eggla/reference/predict_bmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict BMI for a range of ages from a model fit. — predict_bmi","text":"fit model object statistical model call nlme::lme(), time_model() egg_model(). start start time window compute AP AR. end end time window compute AP AR. step step increment sequence. filter string following data.table syntax filtering \"\" (.e., row elements), e.g., filter = \"source == ''\". Argument pass compute_apar() (see predict_bmi()). Default NULL.","code":""},{"path":"https://m.canouil.dev/eggla/reference/predict_bmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict BMI for a range of ages from a model fit. — predict_bmi","text":"data.table object.","code":""},{"path":"https://m.canouil.dev/eggla/reference/predict_bmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict BMI for a range of ages from a model fit. — predict_bmi","text":"","code":"data(\"bmigrowth\") res <- egg_model(   formula = log(bmi) ~ age,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)), #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   )  predict_bmi(res)[] #>        egg_id egg_ageyears  egg_bmi #>     1:    082         0.25 16.21582 #>     2:    082         0.26 16.29086 #>     3:    082         0.27 16.36399 #>     4:    082         0.28 16.43521 #>     5:    082         0.29 16.50453 #>    ---                              #> 48796:    068         9.96 30.83642 #> 48797:    068         9.97 30.85793 #> 48798:    068         9.98 30.87946 #> 48799:    068         9.99 30.90100 #> 48800:    068        10.00 30.92255  ## For multiple sources of measures or multiple measures at one age set.seed(1234) dta <- bmigrowth[bmigrowth[[\"sex\"]] == 0, ] dta[[\"source\"]] <- c(\"A\", \"B\")[rbinom(n = nrow(dta), size = 1, prob = 0.65) + 1]  res <- egg_model(   formula = log(bmi) ~ age + source,   data = dta,   id_var = \"ID\",   random_complexity = 1 ) #> Fitting model: #>   nlme::lme( #>     fixed = log(bmi) ~ gsp(age, knots = c(1, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)) + source, #>     data = data, #>     random = ~ gsp(age, knots = c(1, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID, #>     na.action = stats::na.omit, #>     method = \"ML\", #>     control = nlme::lmeControl(opt = \"optim\", niterEM = 25, maxIter = 500, msMaxIter = 500) #>   )  predict_bmi(res)[order(egg_id, egg_ageyears)] #> Warning: Multiple BMI measures (for the same age) have been detected and are aggregated using geometric mean! #> Use \"filter\" (or \"filter\" in `run_eggla_lmm()`) parameter to apply some filtering, e.g., filter = \"source == 'clinic'\". #>        egg_id egg_ageyears  egg_bmi #>     1:    001         0.25 18.42096 #>     2:    001         0.26 18.50635 #>     3:    001         0.27 18.58958 #>     4:    001         0.28 18.67063 #>     5:    001         0.29 18.74953 #>    ---                              #> 48796:    099         9.96 33.73105 #> 48797:    099         9.97 33.75703 #> 48798:    099         9.98 33.78303 #> 48799:    099         9.99 33.80905 #> 48800:    099        10.00 33.83508  predict_bmi(res, filter = \"source == 'A'\")[order(egg_id, egg_ageyears)] #>        egg_id egg_source egg_ageyears  egg_bmi #>     1:    001          A         0.25 18.39947 #>     2:    001          A         0.26 18.48476 #>     3:    001          A         0.27 18.56789 #>     4:    001          A         0.28 18.64885 #>     5:    001          A         0.29 18.72765 #>    ---                                         #> 48796:    099          A         9.96 33.69170 #> 48797:    099          A         9.97 33.71765 #> 48798:    099          A         9.98 33.74362 #> 48799:    099          A         9.99 33.76960 #> 48800:    099          A        10.00 33.79560"},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform GWAS using PLINK2 (and BCFtools) — run_eggla_gwas","title":"Perform GWAS using PLINK2 (and BCFtools) — run_eggla_gwas","text":"Format VCF file(s) filtering variants satisfaying \"--min-alleles 2 --max-alleles 2 --types snps\" setting IDs (annotation file using VEP provided) \"%CHROM:%POS:%REF:%ALT\" (see https://samtools.github.io/bcftools/). GWAS performed formatted VCF file(s) PLINK2 software (https://www.cog-genomics.org/plink/2.0).","code":""},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform GWAS using PLINK2 (and BCFtools) — run_eggla_gwas","text":"","code":"run_eggla_gwas(   data,   results,   id_column,   traits = c(\"slope_.*\", \"auc_.*\", \"^AP_.*\", \"^AR_.*\"),   covariates,   vcfs,   working_directory,   vep_file = NULL,   use_info = TRUE,   bin_path = list(bcftools = \"/usr/bin/bcftools\", plink2 = \"/usr/bin/plink2\"),   bcftools_view_options = NULL,   build = \"38\",   strand = \"+\",   info_type = \"IMPUTE2 info score via 'bcftools +impute-info'\",   threads = 1,   quiet = FALSE,   clean = TRUE )"},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform GWAS using PLINK2 (and BCFtools) — run_eggla_gwas","text":"data Path phenotypes stored CSV file. results Paths zip archives directories generated run_eggla_lmm() (vector length two, one male one female path). id_column Name column sample/individual IDs stored. traits One multiple traits, .e., columns' names data, analysed separately. covariates One several covariates, .e., columns' names data, used. Binary trait coded '1' '2', sex must coded: '1' = male, '2' = female, 'NA'/'0' = missing. vcfs Path \"raw\" VCF file(s) containing genotypes individuals analysed. working_directory Directory computation occur output files saved. vep_file Path VEP annotation file used set variants RSIDs add gene SYMBOL, etc. use_info logical indicating whether extract informations stored \"INFO\" field. bin_path named list containing path PLINK2 BCFtools binaries PLINK2, URL binary can provided (see https://www.cog-genomics.org/plink/2.0). bcftools_view_options string vector strings (pass paste()) containing BCFtools view parameters, e.g., \"--min-af 0.05\", \"--exclude 'INFO/INFO < 0.8'\", /\"--min-alleles 2 --max-alleles 2 --types snps\". build Build genome SNP orientated. Default \"38\". strand Orientation site human genome strand used. \"+\" (default). info_type Type information provided INFO column, e.g., \"IMPUTE2 info score via 'bcftools +impute-info'\", threads Number threads used BCFtools PLINK2 commands. quiet logical indicating whether suppress output. clean logical indicating whether clean intermediary files .","code":""},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform GWAS using PLINK2 (and BCFtools) — run_eggla_gwas","text":"Path results file.","code":""},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform GWAS using PLINK2 (and BCFtools) — run_eggla_gwas","text":"","code":"if (interactive()) {   data(\"bmigrowth\")   bmigrowth_csv <- file.path(tempdir(), \"bmigrowth.csv\")   fwrite(     x = bmigrowth,     file = bmigrowth_csv   )   results_archives <- run_eggla_lmm(     data = fread(       file = file.path(tempdir(), \"bmigrowth.csv\"),       colClasses = list(character = \"ID\")     ),     id_variable = \"ID\",     age_days_variable = NULL,     age_years_variable = \"age\",     weight_kilograms_variable = \"weight\",     height_centimetres_variable = \"height\",     sex_variable = \"sex\",     covariates = NULL,     male_coded_zero = FALSE,     random_complexity = 1,     parallel = FALSE,     parallel_n_chunks = 1,     working_directory = tempdir()   )   run_eggla_gwas(     data = fread(       file = file.path(tempdir(), \"bmigrowth.csv\"),       colClasses = list(character = \"ID\")     ),     results = results_archives,     id_column = \"ID\",     traits = c(\"slope_.*\", \"auc_.*\", \"^AP_.*\", \"^AR_.*\"),     covariates = c(\"sex\"),     vcfs = list.files(       path = system.file(\"vcf\", package = \"eggla\"),       pattern = \"\\\\.vcf$|\\\\.vcf.gz$\",       full.names = TRUE     ),     working_directory = tempdir(),     vep_file = NULL,     bin_path = list(       bcftools = \"/usr/bin/bcftools\",       plink2 = \"/usr/bin/plink2\"     ),     threads = 1   ) }"},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform EGG longitudinal analysis and derived areas under the curves and slopes. — run_eggla_lmm","title":"Perform EGG longitudinal analysis and derived areas under the curves and slopes. — run_eggla_lmm","text":"Perform Daymont's quality-control BMI, fit cubic splines mixed model regression linear splines random effect, save model object, generates residuals figures fot model validity, derived area curve slopes male femal. function wrapper around egg_model(), egg_slopes() egg_aucs().","code":""},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform EGG longitudinal analysis and derived areas under the curves and slopes. — run_eggla_lmm","text":"","code":"run_eggla_lmm(   data,   id_variable,   age_days_variable,   age_years_variable,   weight_kilograms_variable,   height_centimetres_variable,   sex_variable,   covariates,   male_coded_zero = FALSE,   random_complexity = \"auto\",   use_car1 = FALSE,   knots = c(1, 8, 12),   period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),   start = 0.25,   end = 10,   step = 0.01,   filter = NULL,   outlier_method = \"iqr\",   outlier_threshold = list(iqr = 2),   outlier_exclude = TRUE,   parallel = FALSE,   parallel_n_chunks = 1,   working_directory = getwd(),   quiet = FALSE,   clean = TRUE )"},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform EGG longitudinal analysis and derived areas under the curves and slopes. — run_eggla_lmm","text":"data Phenotypes data inherits data.frame class. id_variable Name column sample/individual IDs stored. age_days_variable Name column age days stored. NULL age days available. age_years_variable Name column age years stored. NULL age years available. weight_kilograms_variable Name column weight kilograms stored. height_centimetres_variable Name column height centimetres stored. sex_variable Name column sex stored. covariates vector columns' names used covariates. NULL covariates add. male_coded_zero male coded \"0\" (female coded \"1\")? random_complexity numeric (1-3) indicating complexity random effect term. Default, \"auto\" try complex less complex success. use_car1 logical indicating whether use continuous auto-correlation, .e., CAR(1) correlation structure. knots knots defining splines. period intervals knots slopes computed. start start time window compute AP AR. end end time window compute AP AR. step step increment sequence. filter string following data.table syntax filtering \"\" (.e., row elements), e.g., filter = \"source == ''\". Argument pass compute_apar() (see predict_bmi()). Default NULL. outlier_method outlier detection method(s). Default \"iqr\". Can \"cook\", \"pareto\", \"zscore\", \"zscore_robust\", \"iqr\", \"ci\", \"eti\", \"hdi\", \"bci\", \"mahalanobis\", \"mahalanobis_robust\", \"mcd\", \"ics\", \"optics\" \"lof\". See performance::check_outliers() https://easystats.github.io/performance/reference/check_outliers.html details. outlier_threshold list containing threshold values method (e.g., list('mahalanobis' = 7, 'cook' = 1)), observation considered outlier. NULL, default values used (see 'Details'). numeric value given, used threshold method run. See performance::check_outliers() https://easystats.github.io/performance/reference/check_outliers.html details. outlier_exclude Whether values/individuals flagged outliers excluded. Default TRUE. parallel Determines growthcleanr::cleangrowth() function shoud run parallel. Defaults FALSE. parallel_n_chunks Specify number batches (growthcleanr::cleangrowth()) run parallel. applies parallel set TRUE. Defaults number workers returned getDoParWorkers function foreach package. working_directory Directory computation occur output files saved. quiet logical indicating whether suppress output. clean logical indicating whether clean working_directory archives created.","code":""},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform EGG longitudinal analysis and derived areas under the curves and slopes. — run_eggla_lmm","text":"Path zip archives.","code":""},{"path":"https://m.canouil.dev/eggla/reference/run_eggla_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform EGG longitudinal analysis and derived areas under the curves and slopes. — run_eggla_lmm","text":"","code":"if (interactive()) {   data(\"bmigrowth\")   fwrite(     x = bmigrowth,     file = file.path(tempdir(), \"bmigrowth.csv\")   )   res <- run_eggla_lmm(     data = fread(file.path(tempdir(), \"bmigrowth.csv\")),     id_variable = \"ID\",     age_days_variable = NULL,     age_years_variable = \"age\",     weight_kilograms_variable = \"weight\",     height_centimetres_variable = \"height\",     sex_variable = \"sex\",     covariates = NULL,     random_complexity = 1,     working_directory = tempdir()   ) }"},{"path":"https://m.canouil.dev/eggla/reference/time_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit one of three mixed model. — time_model","title":"Fit one of three mixed model. — time_model","text":"Fit mixed model regression \"cubic slope\", \"linear splines\" \"cubic splines\" fixed random effects.","code":""},{"path":"https://m.canouil.dev/eggla/reference/time_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit one of three mixed model. — time_model","text":"","code":"time_model(   x,   y,   cov = NULL,   data,   method = c(\"cubic_slope\", \"linear_splines\", \"cubic_splines\"),   knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,     12))[[method]],   use_car1 = FALSE,   id_var = \"ID\",   quiet = FALSE )"},{"path":"https://m.canouil.dev/eggla/reference/time_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit one of three mixed model. — time_model","text":"x length one character vector main covariate name (.e., right-hand side). y length one character vector variable name explained (.e., left-hand side). cov vector addtional/optional covariates names included fixed effect part linear mixed-effects models. data data.frame containing variables named x y. method type model, .e., one \"cubic_slope\", \"linear_splines\" \"cubic_splines\". knots knots defining splines \"linear_splines\" \"cubic_splines\" methods. use_car1 logical indicating whether use continuous auto-correlation, .e., CAR(1) correlation structure. id_var string indicating name variable used individual identifier. quiet logical indicating whether suppress output.","code":""},{"path":"https://m.canouil.dev/eggla/reference/time_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit one of three mixed model. — time_model","text":"object class \"lme\" representing linear mixed-effects model fit.","code":""},{"path":"https://m.canouil.dev/eggla/reference/time_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit one of three mixed model. — time_model","text":"","code":"data(\"bmigrowth\") ls_mod <- time_model(   x = \"age\",   y = \"log(bmi)\",   cov = NULL,   data = bmigrowth[bmigrowth[[\"sex\"]] == 0, ],   method = \"linear_splines\" ) #> nlme::lme( #>   fixed = log(bmi) ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)), #>   data = data, #>   random = ~ gsp(age, knots = c(5.5, 11), degree = rep(1, 3), smooth = rep(0, 2)) | ID, #>   na.action = stats::na.omit, #>   method = \"ML\", #>   control = nlme::lmeControl(opt = \"optim\", maxIter = 500, msMaxIter = 500) #> ) sres <- as.data.frame(summary(ls_mod)[[\"tTable\"]]) rownames(sres) <- sub(\"gsp\\\\(.*\\\\)\\\\)\", \"gsp(...)\", rownames(sres)) sres #>                         Value   Std.Error  DF     t-value      p-value #> (Intercept)       2.768213585 0.012555936 481 220.4705111 0.000000e+00 #> gsp(...)D1(0)     0.044675074 0.004592058 481   9.7287703 1.535193e-20 #> gsp(...)C(5.5).1  0.019727692 0.008265921 481   2.3866296 1.738920e-02 #> gsp(...)C(11).1  -0.005017389 0.013127743 481  -0.3821974 7.024838e-01"},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-19-5","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.19.5","text":"fix: turns warnings errors fitting model first time. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.19.4...v0.19.5","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-19-4","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.19.4","text":"fix: linters warnings. fix: case error, also increase umber EM iterations. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.19.3...v0.19.4","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-19-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.19.3","text":"fix: update commands get version. fix: ‘ax’ replaced ‘omitted’ PLINK2 output. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.19.2...v0.19.3","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"build-0-19-2","dir":"Changelog","previous_headings":"","what":"Build","title":"eggla 0.19.2","text":"build: update PLINK2 11th April 2023 version (Linux 64-bit build).","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-19-2","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.19.2","text":"chore: convert bibentry. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.19.1...v0.19.2","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-19-1","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.19.1","text":"chore: update domain","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"docs-0-19-1","dir":"Changelog","previous_headings":"","what":"Docs","title":"eggla 0.19.1","text":"docs: update domain. docs: update missing argument. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.19.0...v0.19.1","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-19-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.19.0","text":"fix: update path files example. fix: check samples VCF files. fix: leading zeros IDs dataset removed. fix: use PLINK2 compute HWE P-value, N, alleles frequencies, missing rate. fix: use PLINK2 compute MACH_R2 imputation score. fix: use vep_file top level parameter instead vep. fix: remove --mach-r2-filter PLINK2 option. fix: groupOnX argument geom_quasirandom() deprecated ggbeeswarm 0.7.1. fix: using size aesthetic lines deprecated. fix: bad copy/paste. (#100) fix: wrong static title residuals plot. (#102) fix: update step parameter adiposity peak/rebound prediction. (#98) fix: update step parameter adiposity peak/rebound prediction. (#98)","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-19-0","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.19.0","text":"chore: split .devcontainer settings separate repositories, .e., .vscode .devcontainer.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"build-0-19-0","dir":"Changelog","previous_headings":"","what":"Build","title":"eggla 0.19.0","text":"build: upgrade PLINK2 BCFtools latest versions. build: update R packages latest versions. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.18.5...v0.19.0","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-0185","dir":"Changelog","previous_headings":"","what":"eggla 0.18.5","title":"eggla 0.18.5","text":"docs: fix wrong return value documentation. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.18.4...v0.18.5","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-18-4","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.18.4","text":"chore: update email address. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.18.3...v0.18.4","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-18-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.18.3","text":"fix: HWE_P NA imputed variants. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.18.2...v0.18.3","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-18-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.18.2","text":"fix: parameters table properly filtered omitting missing values. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.18.1...v0.18.2","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-18-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.18.1","text":"fix: info_type description given genotyped variants. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.18.0...v0.18.1","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-18-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.18.0","text":"feat: perform correlations parameters. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.17.5...v0.18.0","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"style-0-17-5","dir":"Changelog","previous_headings":"","what":"Style","title":"eggla 0.17.5","text":"style: remove top ticks AP/AR. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.17.4...v0.17.5","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-17-4","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.17.4","text":"fix: rename R2 INFO exists. revert: set back knots original values diagnostics. fix: hardcode performance metrics avoid changes due performance updates. fix: eval FALSE set w/o AR1.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"docs-0-17-4","dir":"Changelog","previous_headings":"","what":"Docs","title":"eggla 0.17.4","text":"docs: new section update tidy perf data.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"style-0-17-4","dir":"Changelog","previous_headings":"","what":"Style","title":"eggla 0.17.4","text":"style: homogenise figures new theme. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.17.3...v0.17.4","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-17-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.17.3","text":"fix: order derived parameter outlier figure. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.17.2...v0.17.3","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-17-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.17.2","text":"fix: update filter removed AR estimates add control AR > AP. fix: missplaced parenthesis. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.17.1...v0.17.2","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-17-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.17.1","text":"fix: allow one value outlier_method. fix: uses GAM cubic splines every time.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"style-0-17-1","dir":"Changelog","previous_headings":"","what":"Style","title":"eggla 0.17.1","text":"style: set default ggplot2 theme modified version theme_minimal() colour/fill scales “viridis”. style: use Okabe Ito colour palette. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.17.0...v0.17.1","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-17-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.17.0","text":"feat: new arg pass outlier method. feat: new arg pass outlier method threshold. feat: now exclude flagged outliers setting values NA.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-17-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.17.0","text":"fix: replace AP greater 2 NA.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"tests-0-17-0","dir":"Changelog","previous_headings":"","what":"Tests","title":"eggla 0.17.0","text":"test: longer uses snapshots.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-17-0","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.17.0","text":"style: separate run_eggl_*() functions rest. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.16.0...v0.17.0","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-16-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.16.0","text":"feat: draw outlier figure derived parameters.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-16-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.16.0","text":"fix: id column matching across parameters now properly works. fix: CRAN checks notes. fix: standardise ggplot default theme fix gt tables. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.15.0...v0.16.0","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-15-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.15.0","text":"feat: now detects outliers slopes together, AUCs together individual slopes, AUCs, AP (BMI age), AR (BMI age). Full Changelog: https://github.com/mcanouil/eggla/compare/v0.14.0...v0.15.0","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"breaking-changes-0-14-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"eggla 0.14.0","text":"refactor!: longer rely renv.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"featuresfixes-0-14-0","dir":"Changelog","previous_headings":"","what":"Features/Fixes","title":"eggla 0.14.0","text":"feat: add diagnostics output “-send” folder avoid mistakenly send individual-level data. fix: now uses filled INFO field VCF compute required columns meta-analysis. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.13.1...v0.14.0","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-13-1","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.13.1","text":"chore: update template “minty”. Full Changelog: https://github.com/mcanouil/eggla/compare/v0.13.0...v0.13.1","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"breaking-changes-0-13-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"eggla 0.13.0","text":"fix: knots default value now c(1, 8, 12). refactor: path argument renamed working_directory consistency run_eggla_lmm().","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-13-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.13.0","text":"feat: filter argument filter predicted values table case multiple measurements. feat: filter_apar argument passed compute_apar() predict_bmi(). feat: now performs GWAS BMI age adiposity peak rebound addition slopes AUCs. feat: now clean argument clean intermediary files stored working_directory. feat: new use_info argument indicate INFO field extracted (default FALSE).","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-13-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.13.0","text":"fix: now checks IDs unique. fix: properly export BMI age adiposity peak rebound. fix: PLINK2 BCFTools binary path checks. fix: now check individuals common phenotypes genotypes processing VCF files. fix: move packages suggests imports (e.g., ggtext, ggdist, etc.) fix: now uses growthcleaner CRAN.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-13-0","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.13.0","text":"refactor: improve Docker build process add devcontainer ability. refactor: reorder sections focus main functions first. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.12.3...v0.13.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"breaking-changes-0-12-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"eggla 0.12.3","text":"fix: depends R >= 4.2.0.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-12-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.12.3","text":"fix: BCFtools filters parameter non default. fix: ensure ‘id_column’ type character.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-12-3","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.12.3","text":"chore: add VCF files test run_eggla_gwas().","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"tests-0-12-3","dir":"Changelog","previous_headings":"","what":"Tests","title":"eggla 0.12.3","text":"test: add run_eggla_gwas docker build test example. test: new tests run_eggla functions. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.12.2...v0.12.3>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-12-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.12.2","text":"fix: condition length > 1. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.12.1...v0.12.2>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-12-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.12.1","text":"fix: wrong variable “results” input check condition. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.12.0...v0.12.1>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-12-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.12.0","text":"fix: improve data transformation/cleaning (#38). fix: allow output directories path zip archives zip available (#41). fix: remove dates model object filename. fix: allow use directories path zip archives results (#41). fix: rename results_zip argument results.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-12-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.12.0","text":"feat: add knots period parameters (#37). feat: add clean parameter clean directories archives successfully created (#41).","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-12-0","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.12.0","text":"chore: remove version CFF file.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"style-0-12-0","dir":"Changelog","previous_headings":"","what":"Style","title":"eggla 0.12.0","text":"style: remove break line badges section. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.11.2...v0.12.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-11-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.11.2","text":"fix: uses general Zenodo DOI. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.11.1...v0.11.2>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"chores-0-11-1","dir":"Changelog","previous_headings":"","what":"Chores","title":"eggla 0.11.1","text":"chore: add DOI citation files.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-11-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.11.1","text":"fix: uses latest moving tag. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.11.0...v0.11.1>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"breaking-changes-0-11-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"eggla 0.11.0","text":"run_eggla() renamed run_eggla_lmm(). do_eggla_gwas() renamed run_eggla_gwas().","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-11-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.11.0","text":"fix: exclude rds included archive. fix: improve add messages. fix: ensure “data” data.frame path read data.frame. fix: allows binary path actual binary path. fix: now returns results files path, input parameters zip file, text file software versions. fix: collapse vector covariates atomic string added results files.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-11-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.11.0","text":"feat: add PLINK2 binary internally. feat: eggla model call now written file. feat: add correlation figure/table. (#22) feat: add function check. (#22)","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"tests-0-11-0","dir":"Changelog","previous_headings":"","what":"Tests","title":"eggla 0.11.0","text":"test: add tests plot functions. test: add tests time_model() egg_model(). test: add tests *_correlations() *_outliers() functions. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.10.4...v0.11.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-10-4","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.10.4","text":"Fix: plink2 binary path modified outside download statement. Fix: merge cartesian keeping first measures individuals (#20). Fix: add data.table dependencies. fix: documentation consistency code, .e., replaced “AR1” “CAR1” (#21). Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.10.3...v0.10.4>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-10-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.10.3","text":"Build: add PLINK2 install eggla’s dependencies, including suggests. Fix: longer relies URL PLINK2 since alpha dynamic URL remains. Chore: remove unused eval = FALSE chunk option. Fix: remove renv code Docker section. Fix: set properly working directory. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.10.2...v0.10.3>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-10-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.10.2","text":"Fix: try without CAR1 reducing random effect. (#18) Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.10.1...v0.10.2>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-10-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.10.1","text":"Fix: hardcoded knots, now argument. (#16, #17) Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.10.0...v0.10.1>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-10-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.10.0","text":"Feat: new function predict BMI lme model object, egg_model() time_model().","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"improvements-0-10-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"eggla 0.10.0","text":"0-0.5 years (Infancy – previously). 1.5-3.5 years (Childhood – reduced upper bound 5 years). 6.5-10 years (Pre-pubertal – increased lower bound 6 years). 12-17 years (adolescence – previously).","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-10-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.10.0","text":"Fix: grep instead /grepl. Refactor: inherits params predict_bmi(). Fix: uses predict_bmi() internally. Fix: grep instead /grepl. Fix: uses GAM ‘y ~ s(x, bs = “cr”)’. Fix: uses GAM ‘y ~ s(x, bs = “cr”)’ predict_bmi(). Fix: “-” instead “–detach” Docker command. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.9.1...v0.10.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-9-1","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.9.1","text":"Feat: add quiet silent messages. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.9.0...v0.9.1>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-9-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.9.0","text":"Feat: add script example (inst\\setup\\eggla-example.R) run dataset included eggla. Feat: allow specify knots splines, .e., longer hardcoded.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-9-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.9.0","text":"Fix: hardcoded “ID” individual specification random effect. Fix: hardcoded “ID” individual specification random effect adding id_var arg. Fix: use Rscript instead R ---save ---restore --quiet.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"documents-0-9-0","dir":"Changelog","previous_headings":"","what":"Documents","title":"eggla 0.9.0","text":"Docs: complete GWAS sections. Docs: add Docker section. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.8.1...v0.9.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-8-1","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.8.1","text":"Feat: Docker image built automatically “devel” “main” “tag” “releases”. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.8.0...v0.8.1>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-8-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.8.0","text":"Feat: allow compute adiposity peak adiposity rebound raw data \"lme\" model object. Refactor: rename arguments. Feat: now uses third edition testthat.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"eggla 0.8.0","text":"Fix: visible global function definition ‘patterns’.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"build-0-8-0","dir":"Changelog","previous_headings":"","what":"Build","title":"eggla 0.8.0","text":"build: update lock files renv pak based local package. build: update script work local version renv pak. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.7.0...v0.8.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"features-0-7-0","dir":"Changelog","previous_headings":"","what":"Features","title":"eggla 0.7.0","text":"Feat: Allows define range compute adiposity peak adiposity rebound. Feat: Allows use () AR(1) auto-correlation model, TRUE (default: FALSE), function try without models fail.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.7.0","text":"Fix: Uses CAR1 default vignettes, speed-computation. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.6.1...v0.7.0>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.6.1","text":"Fix: returns first local maxima (adiposity peak) minima (adiposity rebound). Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.6.0...v0.6.1>","code":""},{"path":[]},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"new-feature-0-6-0","dir":"Changelog","previous_headings":"","what":"New Feature","title":"eggla 0.6.0","text":"Feat: Function run GWAS eggla results using PLINK2 (BCFtools). Feat: Add “GWAS” step. Refactor: use “R EOF” syntax.","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"eggla 0.6.0","text":"Fix: Rename (add “s”) AUCs csv output file consistency. Docs: Add missing documentation parameters. Fix: hardcoded “age” variable. Fix: ignore case variable search. Fix: hardcoded “age” variable. Fix: ignore case variable search. Fix: ignore case variable search. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.5.2...v0.6.0>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-052","dir":"Changelog","previous_headings":"","what":"eggla 0.5.2","title":"eggla 0.5.2","text":"Fix: renv::restore issue renv.lock GitHub. Fix: Update pak install command. Chore: Upgrade lock files. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.5.1...v0.5.2>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-051","dir":"Changelog","previous_headings":"","what":"eggla 0.5.1","title":"eggla 0.5.1","text":"longer uses nlme::corCAR1(form = ~ 1 | ID) models. Add Kimberley Burrows (@burrowsk) Anni Heiskala authors. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.5.0...v0.5.1>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-050","dir":"Changelog","previous_headings":"","what":"eggla 0.5.0","title":"eggla 0.5.0","text":"Add title. Add/tweak description. Add code examples. Add random_complexity parameter. Remove _var arguments. New function compute adiposity peak adiposity rebound lme model object, egg_model. Rename function consistency, previously known compute_auc. Rename function consistency, previously known predict_average_slopes. Add 01-models-diagnostics.Rmd, describe models testing diagnostics. Add 02-models-selection.Rmd, show perform models selection based results models-diagnostics.Rmd. Add 03-run-cubic-splines.Rmd, show run cubic splines models example dataset (previously README.Rmd). Add 04-adiposity-peak-rebound.Rmd, identify/caracterise adiposity peak adiposity rebound models-diagnostics.Rmd. Add 99-run-eggla.Rmd, show run analysis interactively . New functions plot area curves slopes. Polish website. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.4.4...v0.5.0>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-044","dir":"Changelog","previous_headings":"","what":"eggla 0.4.4","title":"eggla 0.4.4","text":"~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3)) | ID ~ gsp(age, knots = c(2, 8, 12), degree = rep(3, 4), smooth = rep(2, 3))[,1:3] | ID ~ gsp(age, knots = c(2, 8, 12), degree = rep(1, 4), smooth = rep(2, 3)) | ID Add message model currently computed. Add pkgdown website. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.4.3...v0.4.4>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-043","dir":"Changelog","previous_headings":"","what":"eggla 0.4.3","title":"eggla 0.4.3","text":"Disable renv caching. Remove ragg dependency, uses grDevices instead. Add Dockerfile. Use pak addition renv. Remove ragg dependency, uses grDevices instead. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.4.2...v0.4.3>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-042","dir":"Changelog","previous_headings":"","what":"eggla 0.4.2","title":"eggla 0.4.2","text":"Fix typo renv::init calls. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.4.1...v0.4.2>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-041","dir":"Changelog","previous_headings":"","what":"eggla 0.4.1","title":"eggla 0.4.1","text":"Add renv cleaning bash example script. Add setup interactive non-interactive use. Switch svglite ragg avoid issues high number elements. Fix id_var set id_var = \"egg_id\" internally. Switch svglite ragg avoid issues high number elements. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.4.0...v0.4.1>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-040","dir":"Changelog","previous_headings":"","what":"eggla 0.4.0","title":"eggla 0.4.0","text":"Add table content. Add Bash script run everything. Add renv.lock file list dependencies version help install restore . Mixed model selected inside helper/wrapper function. Compute quaility-control BMI. Compute modelling. Write model object. Write derived parameters. Generate residuals plot. Fix model specification additional covariates properly added model formula. Fix hardcoded variable, .e., “age”. models-diagnostics.R, R script compute different models extract performance metrics. models-best.R, R script compare models performance models-diagnostics.R. models-adiposity.R, R script compare predicted BMI values check “adiposity peak”. Remove trailing spaces. Comment code used. Add missing documentation. Add Nicole Warrington. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.3.0...v0.4.0>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-030","dir":"Changelog","previous_headings":"","what":"eggla 0.3.0","title":"eggla 0.3.0","text":"Add fall back (simpler random effect) models “cubic_splines”, “cubic_slopes” “linear_splines”. Fix typos messages. Model call printed message. Add Daymont flag exclusion argument control modelling step. Summary table models use covariates parameter. Uses “sex” coded 1 male 0 female. Small code refactoring. Use performance compare models. Add summary_variables parameter show summary table. Decrease font size Daymont’s QC summary table . Fix numbers summary table. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.2.0...v0.3.0>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-020","dir":"Changelog","previous_headings":"","what":"eggla 0.2.0","title":"eggla 0.2.0","text":"Fix output using as_text = TRUE. Add cov allow additional covariates. Add cov allow additional covariates. Full Changelog: <https://github.com/mcanouil/eggla/compare/v0.1.0...v0.2.0>","code":""},{"path":"https://m.canouil.dev/eggla/news/index.html","id":"eggla-010","dir":"Changelog","previous_headings":"","what":"eggla 0.1.0","title":"eggla 0.1.0","text":"Initial version.","code":""}]
