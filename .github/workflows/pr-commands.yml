# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  issue_comment:
    types: [created]

name: Pull Request Commands

jobs:
  document:
    if: startsWith(github.event.comment.body, '/document')
    name: document
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/pr-fetch@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::roxygen2
      - name: Document
        run: Rscript -e 'roxygen2::roxygenise()'
      - name: commit
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add man/\* NAMESPACE
          git commit -m 'ci: roxygen2::roxygenise()' || echo "No changes to commit"
      - uses: r-lib/actions/pr-push@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  style:
    if: startsWith(github.event.comment.body, '/style')
    name: style
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/pr-fetch@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::styler
      - name: Style
        run: Rscript -e 'styler::style_pkg()'
      - name: commit
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add \*.R
          git commit -m 'ci: styler::style_pkg()' || echo "No changes to commit"
      - uses: r-lib/actions/pr-push@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  R-CMD-check:
    if: startsWith(github.event.comment.body, '/rcmdcheck')
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04,    r: '4.2.0'}
          - {os: ubuntu-22.04,    r: '4.2.0'}
          - {os: ubuntu-latest,   r: '4.2.0'}
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      BCFTOOLS_VERSION: 1.15.1
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - name: Install libcurl
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, local::.
      - name: Install BCFtools
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && \
          sudo apt-get install -y --no-install-recommends \
            libxt6 \
            ca-certificates \
            bzip2 \
            wget \
            autoconf \
            automake \
            make \
            cmake \
            libbz2-dev \
            liblzma-dev \
            libjpeg-dev \
            libxml2-dev \
            zlib1g-dev \
            libgdal-dev
          wget -q -P /tmp/ https://github.com/samtools/bcftools/releases/download/${BCFTOOLS_VERSION}/bcftools-${BCFTOOLS_VERSION}.tar.bz2 && \
            tar -C /tmp/ -xjf /tmp/bcftools-${BCFTOOLS_VERSION}.tar.bz2 && \
            cd /tmp/bcftools-${BCFTOOLS_VERSION} && \
            sudo autoreconf -i && \
            sudo ./configure --prefix=/usr && \
            sudo make && \
            sudo make install
      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual")'
          error-on: '"error"'
      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
