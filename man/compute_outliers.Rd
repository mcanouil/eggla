% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_outliers.R
\name{compute_outliers}
\alias{compute_outliers}
\title{Compute outliers detection in derived parameters from a cubic splines mixed-effects model by \code{time_model()}.}
\usage{
compute_outliers(
  fit,
  method,
  period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17),
  knots = list(cubic_slope = NULL, linear_splines = c(5.5, 11), cubic_splines = c(1, 8,
    12))[[method]],
  from = c("predicted", "observed"),
  start = 0.25,
  end = 10,
  step = 0.05,
  filter = NULL,
  outlier_method = "iqr",
  outlier_threshold = list(iqr = 1.7)
)
}
\arguments{
\item{fit}{A model object from a statistical model such as
from a call to \code{time_model()}.}

\item{method}{The type of model provided in \code{fit},
\emph{i.e.}, one of \code{"cubic_slope"}, \code{"linear_splines"} or \code{"cubic_splines"}.}

\item{period}{The intervals knots on which AUCs are to be computed.}

\item{knots}{The knots as defined \code{fit} and according to \code{method}.}

\item{from}{A string indicating the type of data to be used for the AP and AR
computation, either "predicted" or "observed". Default is "predicted".}

\item{start}{The start of the time window to compute AP and AR.}

\item{end}{The end of the time window to compute AP and AR.}

\item{step}{The step to increment the sequence.}

\item{filter}{A string following \code{data.table} syntax for filtering on \code{"i"}
(\emph{i.e.}, row elements), \emph{e.g.}, \code{filter = "source == 'A'"}.
Default is \code{NULL}.}

\item{outlier_method}{The outlier detection method(s). Can be \code{"all"} or some of
\code{"cook"}, \code{"pareto"}, \code{"zscore"}, \code{"zscore_robust"}, \code{"iqr"}, \code{"ci"}, \code{"eti"},
\code{"hdi"}, \code{"bci"}, \code{"mahalanobis"}, \code{"mahalanobis_robust"}, \code{"mcd"}, \code{"ics"},
\code{"optics"} or \code{"lof"}.
See \code{performance::check_outliers()} \url{https://easystats.github.io/performance/reference/check_outliers.html} for details.}

\item{outlier_threshold}{A list containing the threshold values for each method (\emph{e.g.},
\code{list('mahalanobis' = 7, 'cook' = 1)}), above which an observation is
considered as outlier. If \code{NULL}, default values will be used (see
'Details'). If a numeric value is given, it will be used as the threshold
for any of the method run.
See \code{performance::check_outliers()} \url{https://easystats.github.io/performance/reference/check_outliers.html} for details.}
}
\value{
A \code{data.frame} listing the individuals which are not outliers based on several criteria.
}
\description{
Based on computed area under the curves (\emph{i.e.}, \code{compute_aucs()})
and slopes (\emph{i.e.}, \code{compute_slopes()}) for several intervals using
a model fitted by \code{time_model()}, compute an outlier detection.
For details, see methods \code{iqr} and \code{zscore} of \code{performance::check_outliers()}.
}
\examples{
data("bmigrowth")
ls_mod <- time_model(
  x = "age",
  y = "log(bmi)",
  cov = NULL,
  data = bmigrowth[bmigrowth[["sex"]] == 0, ],
  method = "cubic_splines"
)
head(compute_outliers(
  fit = ls_mod,
  method = "cubic_splines",
  period = c(0, 0.5, 1.5, 3.5, 6.5, 10, 12, 17)#,
  # knots = list(
  #   "cubic_slope" = NULL,
  #   "linear_splines" = c(5.5, 11),
  #   "cubic_splines" = c(1, 8, 12)
  # )[[method]]
)[Outlier != 0])
}
